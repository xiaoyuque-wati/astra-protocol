// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v3.19.4
// source: user-manager-service/api.proto

package user_manager_service

import (
	commi "github.com/ClareAI/ai-platform-protocol/api/commi"
	common "github.com/ClareAI/ai-platform-protocol/api/common"
	movideo "github.com/ClareAI/ai-platform-protocol/api/movideo"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// logintype
type CommiLoginAndRegisterRequest_LOGINTYPE int32

const (
	CommiLoginAndRegisterRequest_UNKNOWN CommiLoginAndRegisterRequest_LOGINTYPE = 0
	// 密码登录
	CommiLoginAndRegisterRequest_PASSWORD CommiLoginAndRegisterRequest_LOGINTYPE = 1
	// 自注册
	CommiLoginAndRegisterRequest_REGISTER CommiLoginAndRegisterRequest_LOGINTYPE = 2
	// 自注册用户忘记密码
	CommiLoginAndRegisterRequest_FORGET_PASSWORD CommiLoginAndRegisterRequest_LOGINTYPE = 3
)

// Enum value maps for CommiLoginAndRegisterRequest_LOGINTYPE.
var (
	CommiLoginAndRegisterRequest_LOGINTYPE_name = map[int32]string{
		0: "UNKNOWN",
		1: "PASSWORD",
		2: "REGISTER",
		3: "FORGET_PASSWORD",
	}
	CommiLoginAndRegisterRequest_LOGINTYPE_value = map[string]int32{
		"UNKNOWN":         0,
		"PASSWORD":        1,
		"REGISTER":        2,
		"FORGET_PASSWORD": 3,
	}
)

func (x CommiLoginAndRegisterRequest_LOGINTYPE) Enum() *CommiLoginAndRegisterRequest_LOGINTYPE {
	p := new(CommiLoginAndRegisterRequest_LOGINTYPE)
	*p = x
	return p
}

func (x CommiLoginAndRegisterRequest_LOGINTYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CommiLoginAndRegisterRequest_LOGINTYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_user_manager_service_api_proto_enumTypes[0].Descriptor()
}

func (CommiLoginAndRegisterRequest_LOGINTYPE) Type() protoreflect.EnumType {
	return &file_user_manager_service_api_proto_enumTypes[0]
}

func (x CommiLoginAndRegisterRequest_LOGINTYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CommiLoginAndRegisterRequest_LOGINTYPE.Descriptor instead.
func (CommiLoginAndRegisterRequest_LOGINTYPE) EnumDescriptor() ([]byte, []int) {
	return file_user_manager_service_api_proto_rawDescGZIP(), []int{0, 0}
}

type CommiLoginAndRegisterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户来源
	Source    common.USERSOURCE                      `protobuf:"varint,1,opt,name=source,proto3,enum=wati.ai_platform.protocol.common.USERSOURCE" json:"source,omitempty"`
	LoginType CommiLoginAndRegisterRequest_LOGINTYPE `protobuf:"varint,2,opt,name=login_type,json=loginType,proto3,enum=wati.ai_platform.protocol.user_manager_service.CommiLoginAndRegisterRequest_LOGINTYPE" json:"login_type,omitempty"`
	// 邮箱
	Email string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	// 密码, 前端明文，后端md5(salt + passwd)
	// 如果是type FORGET_PASSWORD 则是新的密码.
	Password string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	// [optional] 一些额外信息，比如wati的tentetid
	ExtraInfo string `protobuf:"bytes,5,opt,name=extra_info,json=extraInfo,proto3" json:"extra_info,omitempty"`
}

func (x *CommiLoginAndRegisterRequest) Reset() {
	*x = CommiLoginAndRegisterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_manager_service_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommiLoginAndRegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommiLoginAndRegisterRequest) ProtoMessage() {}

func (x *CommiLoginAndRegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_manager_service_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommiLoginAndRegisterRequest.ProtoReflect.Descriptor instead.
func (*CommiLoginAndRegisterRequest) Descriptor() ([]byte, []int) {
	return file_user_manager_service_api_proto_rawDescGZIP(), []int{0}
}

func (x *CommiLoginAndRegisterRequest) GetSource() common.USERSOURCE {
	if x != nil {
		return x.Source
	}
	return common.USERSOURCE(0)
}

func (x *CommiLoginAndRegisterRequest) GetLoginType() CommiLoginAndRegisterRequest_LOGINTYPE {
	if x != nil {
		return x.LoginType
	}
	return CommiLoginAndRegisterRequest_UNKNOWN
}

func (x *CommiLoginAndRegisterRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CommiLoginAndRegisterRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *CommiLoginAndRegisterRequest) GetExtraInfo() string {
	if x != nil {
		return x.ExtraInfo
	}
	return ""
}

type CommiLoginAndRegisterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户id
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// auth信息
	Auth string `protobuf:"bytes,2,opt,name=auth,proto3" json:"auth,omitempty"`
	// [optional] 登录成功的跳转链接
	// 如果是第一次用wati登录和忘记密码，那么redirect url会返回更改密码的页面，如果是已经注册过就会返回mainpage页面
	// 如果是自注册，那么redirect url会返回重新登录页面
	RedirectUrl string `protobuf:"bytes,3,opt,name=redirect_url,json=redirectUrl,proto3" json:"redirect_url,omitempty"`
}

func (x *CommiLoginAndRegisterResponse) Reset() {
	*x = CommiLoginAndRegisterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_manager_service_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommiLoginAndRegisterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommiLoginAndRegisterResponse) ProtoMessage() {}

func (x *CommiLoginAndRegisterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_manager_service_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommiLoginAndRegisterResponse.ProtoReflect.Descriptor instead.
func (*CommiLoginAndRegisterResponse) Descriptor() ([]byte, []int) {
	return file_user_manager_service_api_proto_rawDescGZIP(), []int{1}
}

func (x *CommiLoginAndRegisterResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CommiLoginAndRegisterResponse) GetAuth() string {
	if x != nil {
		return x.Auth
	}
	return ""
}

func (x *CommiLoginAndRegisterResponse) GetRedirectUrl() string {
	if x != nil {
		return x.RedirectUrl
	}
	return ""
}

type CommiResetPasswordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *CommiResetPasswordRequest) Reset() {
	*x = CommiResetPasswordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_manager_service_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommiResetPasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommiResetPasswordRequest) ProtoMessage() {}

func (x *CommiResetPasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_manager_service_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommiResetPasswordRequest.ProtoReflect.Descriptor instead.
func (*CommiResetPasswordRequest) Descriptor() ([]byte, []int) {
	return file_user_manager_service_api_proto_rawDescGZIP(), []int{2}
}

func (x *CommiResetPasswordRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type CommiResetPasswordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CommiResetPasswordResponse) Reset() {
	*x = CommiResetPasswordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_manager_service_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommiResetPasswordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommiResetPasswordResponse) ProtoMessage() {}

func (x *CommiResetPasswordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_manager_service_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommiResetPasswordResponse.ProtoReflect.Descriptor instead.
func (*CommiResetPasswordResponse) Descriptor() ([]byte, []int) {
	return file_user_manager_service_api_proto_rawDescGZIP(), []int{3}
}

type CommiUserActiveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *CommiUserActiveRequest) Reset() {
	*x = CommiUserActiveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_manager_service_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommiUserActiveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommiUserActiveRequest) ProtoMessage() {}

func (x *CommiUserActiveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_manager_service_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommiUserActiveRequest.ProtoReflect.Descriptor instead.
func (*CommiUserActiveRequest) Descriptor() ([]byte, []int) {
	return file_user_manager_service_api_proto_rawDescGZIP(), []int{4}
}

func (x *CommiUserActiveRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type CommiUserActiveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CommiUserActiveResponse) Reset() {
	*x = CommiUserActiveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_manager_service_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommiUserActiveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommiUserActiveResponse) ProtoMessage() {}

func (x *CommiUserActiveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_manager_service_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommiUserActiveResponse.ProtoReflect.Descriptor instead.
func (*CommiUserActiveResponse) Descriptor() ([]byte, []int) {
	return file_user_manager_service_api_proto_rawDescGZIP(), []int{5}
}

type CommiLogoutRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户id
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *CommiLogoutRequest) Reset() {
	*x = CommiLogoutRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_manager_service_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommiLogoutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommiLogoutRequest) ProtoMessage() {}

func (x *CommiLogoutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_manager_service_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommiLogoutRequest.ProtoReflect.Descriptor instead.
func (*CommiLogoutRequest) Descriptor() ([]byte, []int) {
	return file_user_manager_service_api_proto_rawDescGZIP(), []int{6}
}

func (x *CommiLogoutRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type CommiLogoutResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CommiLogoutResponse) Reset() {
	*x = CommiLogoutResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_manager_service_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommiLogoutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommiLogoutResponse) ProtoMessage() {}

func (x *CommiLogoutResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_manager_service_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommiLogoutResponse.ProtoReflect.Descriptor instead.
func (*CommiLogoutResponse) Descriptor() ([]byte, []int) {
	return file_user_manager_service_api_proto_rawDescGZIP(), []int{7}
}

type CommiUserGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户id
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *CommiUserGetRequest) Reset() {
	*x = CommiUserGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_manager_service_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommiUserGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommiUserGetRequest) ProtoMessage() {}

func (x *CommiUserGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_manager_service_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommiUserGetRequest.ProtoReflect.Descriptor instead.
func (*CommiUserGetRequest) Descriptor() ([]byte, []int) {
	return file_user_manager_service_api_proto_rawDescGZIP(), []int{8}
}

func (x *CommiUserGetRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type CommiUserGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户信息
	User *commi.UserInfo `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *CommiUserGetResponse) Reset() {
	*x = CommiUserGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_manager_service_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommiUserGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommiUserGetResponse) ProtoMessage() {}

func (x *CommiUserGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_manager_service_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommiUserGetResponse.ProtoReflect.Descriptor instead.
func (*CommiUserGetResponse) Descriptor() ([]byte, []int) {
	return file_user_manager_service_api_proto_rawDescGZIP(), []int{9}
}

func (x *CommiUserGetResponse) GetUser() *commi.UserInfo {
	if x != nil {
		return x.User
	}
	return nil
}

type CommiUserUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户id
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 用户名
	// optional
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// 前端明文密码
	// optional
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	// 电话
	// optional
	Phone string `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`
	// 地址
	// optional
	Location string `protobuf:"bytes,5,opt,name=location,proto3" json:"location,omitempty"`
	// 语言
	// optional
	Langeuage string `protobuf:"bytes,6,opt,name=langeuage,proto3" json:"langeuage,omitempty"`
	// 基本信息
	// optional
	Information string `protobuf:"bytes,7,opt,name=information,proto3" json:"information,omitempty"`
}

func (x *CommiUserUpdateRequest) Reset() {
	*x = CommiUserUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_manager_service_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommiUserUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommiUserUpdateRequest) ProtoMessage() {}

func (x *CommiUserUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_manager_service_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommiUserUpdateRequest.ProtoReflect.Descriptor instead.
func (*CommiUserUpdateRequest) Descriptor() ([]byte, []int) {
	return file_user_manager_service_api_proto_rawDescGZIP(), []int{10}
}

func (x *CommiUserUpdateRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CommiUserUpdateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CommiUserUpdateRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *CommiUserUpdateRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *CommiUserUpdateRequest) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *CommiUserUpdateRequest) GetLangeuage() string {
	if x != nil {
		return x.Langeuage
	}
	return ""
}

func (x *CommiUserUpdateRequest) GetInformation() string {
	if x != nil {
		return x.Information
	}
	return ""
}

type CommiUserUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *commi.UserInfo `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *CommiUserUpdateResponse) Reset() {
	*x = CommiUserUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_manager_service_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommiUserUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommiUserUpdateResponse) ProtoMessage() {}

func (x *CommiUserUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_manager_service_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommiUserUpdateResponse.ProtoReflect.Descriptor instead.
func (*CommiUserUpdateResponse) Descriptor() ([]byte, []int) {
	return file_user_manager_service_api_proto_rawDescGZIP(), []int{11}
}

func (x *CommiUserUpdateResponse) GetUser() *commi.UserInfo {
	if x != nil {
		return x.User
	}
	return nil
}

type UserAuthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type common.AUTHTYPE `protobuf:"varint,1,opt,name=type,proto3,enum=wati.ai_platform.protocol.common.AUTHTYPE" json:"type,omitempty"`
	Auth string          `protobuf:"bytes,2,opt,name=auth,proto3" json:"auth,omitempty"`
}

func (x *UserAuthRequest) Reset() {
	*x = UserAuthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_manager_service_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAuthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAuthRequest) ProtoMessage() {}

func (x *UserAuthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_manager_service_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAuthRequest.ProtoReflect.Descriptor instead.
func (*UserAuthRequest) Descriptor() ([]byte, []int) {
	return file_user_manager_service_api_proto_rawDescGZIP(), []int{12}
}

func (x *UserAuthRequest) GetType() common.AUTHTYPE {
	if x != nil {
		return x.Type
	}
	return common.AUTHTYPE(0)
}

func (x *UserAuthRequest) GetAuth() string {
	if x != nil {
		return x.Auth
	}
	return ""
}

type UserAuthResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户id
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 用户类型
	Type    common.USERTYPE `protobuf:"varint,2,opt,name=type,proto3,enum=wati.ai_platform.protocol.common.USERTYPE" json:"type,omitempty"`
	Product common.PRODUCT  `protobuf:"varint,3,opt,name=product,proto3,enum=wati.ai_platform.protocol.common.PRODUCT" json:"product,omitempty"`
}

func (x *UserAuthResponse) Reset() {
	*x = UserAuthResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_manager_service_api_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAuthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAuthResponse) ProtoMessage() {}

func (x *UserAuthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_manager_service_api_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAuthResponse.ProtoReflect.Descriptor instead.
func (*UserAuthResponse) Descriptor() ([]byte, []int) {
	return file_user_manager_service_api_proto_rawDescGZIP(), []int{13}
}

func (x *UserAuthResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserAuthResponse) GetType() common.USERTYPE {
	if x != nil {
		return x.Type
	}
	return common.USERTYPE(0)
}

func (x *UserAuthResponse) GetProduct() common.PRODUCT {
	if x != nil {
		return x.Product
	}
	return common.PRODUCT(0)
}

type CommiUserAPIKeyActionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string              `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Action common.APIKEYACTION `protobuf:"varint,2,opt,name=action,proto3,enum=wati.ai_platform.protocol.common.APIKEYACTION" json:"action,omitempty"`
	// create的时候填api key的名称
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// delete和get的时候必填api keyid
	Id string `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CommiUserAPIKeyActionRequest) Reset() {
	*x = CommiUserAPIKeyActionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_manager_service_api_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommiUserAPIKeyActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommiUserAPIKeyActionRequest) ProtoMessage() {}

func (x *CommiUserAPIKeyActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_manager_service_api_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommiUserAPIKeyActionRequest.ProtoReflect.Descriptor instead.
func (*CommiUserAPIKeyActionRequest) Descriptor() ([]byte, []int) {
	return file_user_manager_service_api_proto_rawDescGZIP(), []int{14}
}

func (x *CommiUserAPIKeyActionRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CommiUserAPIKeyActionRequest) GetAction() common.APIKEYACTION {
	if x != nil {
		return x.Action
	}
	return common.APIKEYACTION(0)
}

func (x *CommiUserAPIKeyActionRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CommiUserAPIKeyActionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CommiUserAPIKeyActionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// action为delete 的时候返回nil
	ApiKey *commi.APIKeyInfo `protobuf:"bytes,1,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
}

func (x *CommiUserAPIKeyActionResponse) Reset() {
	*x = CommiUserAPIKeyActionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_manager_service_api_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommiUserAPIKeyActionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommiUserAPIKeyActionResponse) ProtoMessage() {}

func (x *CommiUserAPIKeyActionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_manager_service_api_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommiUserAPIKeyActionResponse.ProtoReflect.Descriptor instead.
func (*CommiUserAPIKeyActionResponse) Descriptor() ([]byte, []int) {
	return file_user_manager_service_api_proto_rawDescGZIP(), []int{15}
}

func (x *CommiUserAPIKeyActionResponse) GetApiKey() *commi.APIKeyInfo {
	if x != nil {
		return x.ApiKey
	}
	return nil
}

type CommiUserAPIKeyListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 创建时间倒序排
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *CommiUserAPIKeyListRequest) Reset() {
	*x = CommiUserAPIKeyListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_manager_service_api_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommiUserAPIKeyListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommiUserAPIKeyListRequest) ProtoMessage() {}

func (x *CommiUserAPIKeyListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_manager_service_api_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommiUserAPIKeyListRequest.ProtoReflect.Descriptor instead.
func (*CommiUserAPIKeyListRequest) Descriptor() ([]byte, []int) {
	return file_user_manager_service_api_proto_rawDescGZIP(), []int{16}
}

func (x *CommiUserAPIKeyListRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type CommiUserAPIKeyListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys []*commi.APIKeyInfo `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *CommiUserAPIKeyListResponse) Reset() {
	*x = CommiUserAPIKeyListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_manager_service_api_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommiUserAPIKeyListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommiUserAPIKeyListResponse) ProtoMessage() {}

func (x *CommiUserAPIKeyListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_manager_service_api_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommiUserAPIKeyListResponse.ProtoReflect.Descriptor instead.
func (*CommiUserAPIKeyListResponse) Descriptor() ([]byte, []int) {
	return file_user_manager_service_api_proto_rawDescGZIP(), []int{17}
}

func (x *CommiUserAPIKeyListResponse) GetKeys() []*commi.APIKeyInfo {
	if x != nil {
		return x.Keys
	}
	return nil
}

type CommiUserCreditUsageListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string            `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Source common.TASKSOURCE `protobuf:"varint,2,opt,name=source,proto3,enum=wati.ai_platform.protocol.common.TASKSOURCE" json:"source,omitempty"`
	// 包括当天
	Range *common.TimeRange `protobuf:"bytes,3,opt,name=range,proto3" json:"range,omitempty"`
}

func (x *CommiUserCreditUsageListRequest) Reset() {
	*x = CommiUserCreditUsageListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_manager_service_api_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommiUserCreditUsageListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommiUserCreditUsageListRequest) ProtoMessage() {}

func (x *CommiUserCreditUsageListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_manager_service_api_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommiUserCreditUsageListRequest.ProtoReflect.Descriptor instead.
func (*CommiUserCreditUsageListRequest) Descriptor() ([]byte, []int) {
	return file_user_manager_service_api_proto_rawDescGZIP(), []int{18}
}

func (x *CommiUserCreditUsageListRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CommiUserCreditUsageListRequest) GetSource() common.TASKSOURCE {
	if x != nil {
		return x.Source
	}
	return common.TASKSOURCE(0)
}

func (x *CommiUserCreditUsageListRequest) GetRange() *common.TimeRange {
	if x != nil {
		return x.Range
	}
	return nil
}

type CommiUserCreditUsageListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Usages []*commi.CreditUsage `protobuf:"bytes,1,rep,name=usages,proto3" json:"usages,omitempty"`
}

func (x *CommiUserCreditUsageListResponse) Reset() {
	*x = CommiUserCreditUsageListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_manager_service_api_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommiUserCreditUsageListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommiUserCreditUsageListResponse) ProtoMessage() {}

func (x *CommiUserCreditUsageListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_manager_service_api_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommiUserCreditUsageListResponse.ProtoReflect.Descriptor instead.
func (*CommiUserCreditUsageListResponse) Descriptor() ([]byte, []int) {
	return file_user_manager_service_api_proto_rawDescGZIP(), []int{19}
}

func (x *CommiUserCreditUsageListResponse) GetUsages() []*commi.CreditUsage {
	if x != nil {
		return x.Usages
	}
	return nil
}

type CommiBatchUsersAddCreditsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserEmails []string               `protobuf:"bytes,1,rep,name=user_emails,json=userEmails,proto3" json:"user_emails,omitempty"`
	Credits    int32                  `protobuf:"varint,2,opt,name=credits,proto3" json:"credits,omitempty"`
	ExpireAt   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=expire_at,json=expireAt,proto3" json:"expire_at,omitempty"`
}

func (x *CommiBatchUsersAddCreditsRequest) Reset() {
	*x = CommiBatchUsersAddCreditsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_manager_service_api_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommiBatchUsersAddCreditsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommiBatchUsersAddCreditsRequest) ProtoMessage() {}

func (x *CommiBatchUsersAddCreditsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_manager_service_api_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommiBatchUsersAddCreditsRequest.ProtoReflect.Descriptor instead.
func (*CommiBatchUsersAddCreditsRequest) Descriptor() ([]byte, []int) {
	return file_user_manager_service_api_proto_rawDescGZIP(), []int{20}
}

func (x *CommiBatchUsersAddCreditsRequest) GetUserEmails() []string {
	if x != nil {
		return x.UserEmails
	}
	return nil
}

func (x *CommiBatchUsersAddCreditsRequest) GetCredits() int32 {
	if x != nil {
		return x.Credits
	}
	return 0
}

func (x *CommiBatchUsersAddCreditsRequest) GetExpireAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpireAt
	}
	return nil
}

type CommiBatchUsersAddCreditsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rets []*common.Result `protobuf:"bytes,1,rep,name=rets,proto3" json:"rets,omitempty"`
}

func (x *CommiBatchUsersAddCreditsResponse) Reset() {
	*x = CommiBatchUsersAddCreditsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_manager_service_api_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommiBatchUsersAddCreditsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommiBatchUsersAddCreditsResponse) ProtoMessage() {}

func (x *CommiBatchUsersAddCreditsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_manager_service_api_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommiBatchUsersAddCreditsResponse.ProtoReflect.Descriptor instead.
func (*CommiBatchUsersAddCreditsResponse) Descriptor() ([]byte, []int) {
	return file_user_manager_service_api_proto_rawDescGZIP(), []int{21}
}

func (x *CommiBatchUsersAddCreditsResponse) GetRets() []*common.Result {
	if x != nil {
		return x.Rets
	}
	return nil
}

type CommiUserTaskCreditCostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string            `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ItemId string            `protobuf:"bytes,2,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	Cost   int32             `protobuf:"varint,3,opt,name=cost,proto3" json:"cost,omitempty"`
	Eta    int32             `protobuf:"varint,4,opt,name=eta,proto3" json:"eta,omitempty"`
	Status common.TASKSTATUS `protobuf:"varint,5,opt,name=status,proto3,enum=wati.ai_platform.protocol.common.TASKSTATUS" json:"status,omitempty"`
	Source common.TASKSOURCE `protobuf:"varint,6,opt,name=source,proto3,enum=wati.ai_platform.protocol.common.TASKSOURCE" json:"source,omitempty"`
}

func (x *CommiUserTaskCreditCostRequest) Reset() {
	*x = CommiUserTaskCreditCostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_manager_service_api_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommiUserTaskCreditCostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommiUserTaskCreditCostRequest) ProtoMessage() {}

func (x *CommiUserTaskCreditCostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_manager_service_api_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommiUserTaskCreditCostRequest.ProtoReflect.Descriptor instead.
func (*CommiUserTaskCreditCostRequest) Descriptor() ([]byte, []int) {
	return file_user_manager_service_api_proto_rawDescGZIP(), []int{22}
}

func (x *CommiUserTaskCreditCostRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CommiUserTaskCreditCostRequest) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *CommiUserTaskCreditCostRequest) GetCost() int32 {
	if x != nil {
		return x.Cost
	}
	return 0
}

func (x *CommiUserTaskCreditCostRequest) GetEta() int32 {
	if x != nil {
		return x.Eta
	}
	return 0
}

func (x *CommiUserTaskCreditCostRequest) GetStatus() common.TASKSTATUS {
	if x != nil {
		return x.Status
	}
	return common.TASKSTATUS(0)
}

func (x *CommiUserTaskCreditCostRequest) GetSource() common.TASKSOURCE {
	if x != nil {
		return x.Source
	}
	return common.TASKSOURCE(0)
}

type CommiUserTaskCreditCostResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CommiUserTaskCreditCostResponse) Reset() {
	*x = CommiUserTaskCreditCostResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_manager_service_api_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommiUserTaskCreditCostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommiUserTaskCreditCostResponse) ProtoMessage() {}

func (x *CommiUserTaskCreditCostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_manager_service_api_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommiUserTaskCreditCostResponse.ProtoReflect.Descriptor instead.
func (*CommiUserTaskCreditCostResponse) Descriptor() ([]byte, []int) {
	return file_user_manager_service_api_proto_rawDescGZIP(), []int{23}
}

type MovideoUserVerifyTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdToken string `protobuf:"bytes,1,opt,name=id_token,json=idToken,proto3" json:"id_token,omitempty"`
}

func (x *MovideoUserVerifyTokenRequest) Reset() {
	*x = MovideoUserVerifyTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_manager_service_api_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovideoUserVerifyTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovideoUserVerifyTokenRequest) ProtoMessage() {}

func (x *MovideoUserVerifyTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_manager_service_api_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovideoUserVerifyTokenRequest.ProtoReflect.Descriptor instead.
func (*MovideoUserVerifyTokenRequest) Descriptor() ([]byte, []int) {
	return file_user_manager_service_api_proto_rawDescGZIP(), []int{24}
}

func (x *MovideoUserVerifyTokenRequest) GetIdToken() string {
	if x != nil {
		return x.IdToken
	}
	return ""
}

type MovideoUserVerifyTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Token     string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	IsNewUser bool   `protobuf:"varint,3,opt,name=is_new_user,json=isNewUser,proto3" json:"is_new_user,omitempty"`
}

func (x *MovideoUserVerifyTokenResponse) Reset() {
	*x = MovideoUserVerifyTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_manager_service_api_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovideoUserVerifyTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovideoUserVerifyTokenResponse) ProtoMessage() {}

func (x *MovideoUserVerifyTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_manager_service_api_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovideoUserVerifyTokenResponse.ProtoReflect.Descriptor instead.
func (*MovideoUserVerifyTokenResponse) Descriptor() ([]byte, []int) {
	return file_user_manager_service_api_proto_rawDescGZIP(), []int{25}
}

func (x *MovideoUserVerifyTokenResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *MovideoUserVerifyTokenResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *MovideoUserVerifyTokenResponse) GetIsNewUser() bool {
	if x != nil {
		return x.IsNewUser
	}
	return false
}

type MovideoUserLogoutRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *MovideoUserLogoutRequest) Reset() {
	*x = MovideoUserLogoutRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_manager_service_api_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovideoUserLogoutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovideoUserLogoutRequest) ProtoMessage() {}

func (x *MovideoUserLogoutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_manager_service_api_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovideoUserLogoutRequest.ProtoReflect.Descriptor instead.
func (*MovideoUserLogoutRequest) Descriptor() ([]byte, []int) {
	return file_user_manager_service_api_proto_rawDescGZIP(), []int{26}
}

func (x *MovideoUserLogoutRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type MovideoUserLogoutResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MovideoUserLogoutResponse) Reset() {
	*x = MovideoUserLogoutResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_manager_service_api_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovideoUserLogoutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovideoUserLogoutResponse) ProtoMessage() {}

func (x *MovideoUserLogoutResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_manager_service_api_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovideoUserLogoutResponse.ProtoReflect.Descriptor instead.
func (*MovideoUserLogoutResponse) Descriptor() ([]byte, []int) {
	return file_user_manager_service_api_proto_rawDescGZIP(), []int{27}
}

type MovideoUserGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *MovideoUserGetRequest) Reset() {
	*x = MovideoUserGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_manager_service_api_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovideoUserGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovideoUserGetRequest) ProtoMessage() {}

func (x *MovideoUserGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_manager_service_api_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovideoUserGetRequest.ProtoReflect.Descriptor instead.
func (*MovideoUserGetRequest) Descriptor() ([]byte, []int) {
	return file_user_manager_service_api_proto_rawDescGZIP(), []int{28}
}

func (x *MovideoUserGetRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type MovideoUserGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserInfo *movideo.UserInfo `protobuf:"bytes,1,opt,name=user_info,json=userInfo,proto3" json:"user_info,omitempty"`
}

func (x *MovideoUserGetResponse) Reset() {
	*x = MovideoUserGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_manager_service_api_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovideoUserGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovideoUserGetResponse) ProtoMessage() {}

func (x *MovideoUserGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_manager_service_api_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovideoUserGetResponse.ProtoReflect.Descriptor instead.
func (*MovideoUserGetResponse) Descriptor() ([]byte, []int) {
	return file_user_manager_service_api_proto_rawDescGZIP(), []int{29}
}

func (x *MovideoUserGetResponse) GetUserInfo() *movideo.UserInfo {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

type MovideoUserUpgradeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// not implemented yet.
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *MovideoUserUpgradeRequest) Reset() {
	*x = MovideoUserUpgradeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_manager_service_api_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovideoUserUpgradeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovideoUserUpgradeRequest) ProtoMessage() {}

func (x *MovideoUserUpgradeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_manager_service_api_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovideoUserUpgradeRequest.ProtoReflect.Descriptor instead.
func (*MovideoUserUpgradeRequest) Descriptor() ([]byte, []int) {
	return file_user_manager_service_api_proto_rawDescGZIP(), []int{30}
}

func (x *MovideoUserUpgradeRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type MovideoUserUpgradeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MovideoUserUpgradeResponse) Reset() {
	*x = MovideoUserUpgradeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_manager_service_api_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovideoUserUpgradeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovideoUserUpgradeResponse) ProtoMessage() {}

func (x *MovideoUserUpgradeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_manager_service_api_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovideoUserUpgradeResponse.ProtoReflect.Descriptor instead.
func (*MovideoUserUpgradeResponse) Descriptor() ([]byte, []int) {
	return file_user_manager_service_api_proto_rawDescGZIP(), []int{31}
}

type MovideoUserGetUsageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *MovideoUserGetUsageRequest) Reset() {
	*x = MovideoUserGetUsageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_manager_service_api_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovideoUserGetUsageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovideoUserGetUsageRequest) ProtoMessage() {}

func (x *MovideoUserGetUsageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_manager_service_api_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovideoUserGetUsageRequest.ProtoReflect.Descriptor instead.
func (*MovideoUserGetUsageRequest) Descriptor() ([]byte, []int) {
	return file_user_manager_service_api_proto_rawDescGZIP(), []int{32}
}

func (x *MovideoUserGetUsageRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type MovideoUserGetUsageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// current usage this month, unit seconds.
	Usage int64 `protobuf:"varint,1,opt,name=usage,proto3" json:"usage,omitempty"`
	// total usage this month, unit seconds.
	Total int64 `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *MovideoUserGetUsageResponse) Reset() {
	*x = MovideoUserGetUsageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_manager_service_api_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovideoUserGetUsageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovideoUserGetUsageResponse) ProtoMessage() {}

func (x *MovideoUserGetUsageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_manager_service_api_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovideoUserGetUsageResponse.ProtoReflect.Descriptor instead.
func (*MovideoUserGetUsageResponse) Descriptor() ([]byte, []int) {
	return file_user_manager_service_api_proto_rawDescGZIP(), []int{33}
}

func (x *MovideoUserGetUsageResponse) GetUsage() int64 {
	if x != nil {
		return x.Usage
	}
	return 0
}

func (x *MovideoUserGetUsageResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type MovideoUserBalanceCostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string            `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ItemId string            `protobuf:"bytes,2,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	Cost   int64             `protobuf:"varint,3,opt,name=cost,proto3" json:"cost,omitempty"`
	Status common.TASKSTATUS `protobuf:"varint,4,opt,name=status,proto3,enum=wati.ai_platform.protocol.common.TASKSTATUS" json:"status,omitempty"`
}

func (x *MovideoUserBalanceCostRequest) Reset() {
	*x = MovideoUserBalanceCostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_manager_service_api_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovideoUserBalanceCostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovideoUserBalanceCostRequest) ProtoMessage() {}

func (x *MovideoUserBalanceCostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_manager_service_api_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovideoUserBalanceCostRequest.ProtoReflect.Descriptor instead.
func (*MovideoUserBalanceCostRequest) Descriptor() ([]byte, []int) {
	return file_user_manager_service_api_proto_rawDescGZIP(), []int{34}
}

func (x *MovideoUserBalanceCostRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *MovideoUserBalanceCostRequest) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *MovideoUserBalanceCostRequest) GetCost() int64 {
	if x != nil {
		return x.Cost
	}
	return 0
}

func (x *MovideoUserBalanceCostRequest) GetStatus() common.TASKSTATUS {
	if x != nil {
		return x.Status
	}
	return common.TASKSTATUS(0)
}

type MovideoUserBalanceCostResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MovideoUserBalanceCostResponse) Reset() {
	*x = MovideoUserBalanceCostResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_manager_service_api_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovideoUserBalanceCostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovideoUserBalanceCostResponse) ProtoMessage() {}

func (x *MovideoUserBalanceCostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_manager_service_api_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovideoUserBalanceCostResponse.ProtoReflect.Descriptor instead.
func (*MovideoUserBalanceCostResponse) Descriptor() ([]byte, []int) {
	return file_user_manager_service_api_proto_rawDescGZIP(), []int{35}
}

type MovideoUserDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *MovideoUserDeleteRequest) Reset() {
	*x = MovideoUserDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_manager_service_api_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovideoUserDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovideoUserDeleteRequest) ProtoMessage() {}

func (x *MovideoUserDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_manager_service_api_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovideoUserDeleteRequest.ProtoReflect.Descriptor instead.
func (*MovideoUserDeleteRequest) Descriptor() ([]byte, []int) {
	return file_user_manager_service_api_proto_rawDescGZIP(), []int{36}
}

func (x *MovideoUserDeleteRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type MovideoUserDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MovideoUserDeleteResponse) Reset() {
	*x = MovideoUserDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_manager_service_api_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovideoUserDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovideoUserDeleteResponse) ProtoMessage() {}

func (x *MovideoUserDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_manager_service_api_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovideoUserDeleteResponse.ProtoReflect.Descriptor instead.
func (*MovideoUserDeleteResponse) Descriptor() ([]byte, []int) {
	return file_user_manager_service_api_proto_rawDescGZIP(), []int{37}
}

type MovideoUserNewSubscriptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// user id.
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// revenuecat customer id, example: $RCAnonymousID:qwer123scv
	RcCustomerId string `protobuf:"bytes,2,opt,name=rc_customer_id,json=rcCustomerId,proto3" json:"rc_customer_id,omitempty"`
	// the latestPurchaseDate that revenuecat return.
	PurchaseAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=purchase_at,json=purchaseAt,proto3" json:"purchase_at,omitempty"`
	// user event type.
	Event common.SUBSCRIPTION_EVENT `protobuf:"varint,4,opt,name=event,proto3,enum=wati.ai_platform.protocol.common.SUBSCRIPTION_EVENT" json:"event,omitempty"`
	// user selected plan.
	Plan common.USERTYPE `protobuf:"varint,5,opt,name=plan,proto3,enum=wati.ai_platform.protocol.common.USERTYPE" json:"plan,omitempty"`
}

func (x *MovideoUserNewSubscriptionRequest) Reset() {
	*x = MovideoUserNewSubscriptionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_manager_service_api_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovideoUserNewSubscriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovideoUserNewSubscriptionRequest) ProtoMessage() {}

func (x *MovideoUserNewSubscriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_manager_service_api_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovideoUserNewSubscriptionRequest.ProtoReflect.Descriptor instead.
func (*MovideoUserNewSubscriptionRequest) Descriptor() ([]byte, []int) {
	return file_user_manager_service_api_proto_rawDescGZIP(), []int{38}
}

func (x *MovideoUserNewSubscriptionRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *MovideoUserNewSubscriptionRequest) GetRcCustomerId() string {
	if x != nil {
		return x.RcCustomerId
	}
	return ""
}

func (x *MovideoUserNewSubscriptionRequest) GetPurchaseAt() *timestamppb.Timestamp {
	if x != nil {
		return x.PurchaseAt
	}
	return nil
}

func (x *MovideoUserNewSubscriptionRequest) GetEvent() common.SUBSCRIPTION_EVENT {
	if x != nil {
		return x.Event
	}
	return common.SUBSCRIPTION_EVENT(0)
}

func (x *MovideoUserNewSubscriptionRequest) GetPlan() common.USERTYPE {
	if x != nil {
		return x.Plan
	}
	return common.USERTYPE(0)
}

type MovideoUserNewSubscriptionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MovideoUserNewSubscriptionResponse) Reset() {
	*x = MovideoUserNewSubscriptionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_manager_service_api_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovideoUserNewSubscriptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovideoUserNewSubscriptionResponse) ProtoMessage() {}

func (x *MovideoUserNewSubscriptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_manager_service_api_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovideoUserNewSubscriptionResponse.ProtoReflect.Descriptor instead.
func (*MovideoUserNewSubscriptionResponse) Descriptor() ([]byte, []int) {
	return file_user_manager_service_api_proto_rawDescGZIP(), []int{39}
}

type MovideoUserListSubscriptionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *MovideoUserListSubscriptionsRequest) Reset() {
	*x = MovideoUserListSubscriptionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_manager_service_api_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovideoUserListSubscriptionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovideoUserListSubscriptionsRequest) ProtoMessage() {}

func (x *MovideoUserListSubscriptionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_manager_service_api_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovideoUserListSubscriptionsRequest.ProtoReflect.Descriptor instead.
func (*MovideoUserListSubscriptionsRequest) Descriptor() ([]byte, []int) {
	return file_user_manager_service_api_proto_rawDescGZIP(), []int{40}
}

func (x *MovideoUserListSubscriptionsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type MovideoUserListSubscriptionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subscriptions []*movideo.SubscriptionInfo `protobuf:"bytes,1,rep,name=subscriptions,proto3" json:"subscriptions,omitempty"`
}

func (x *MovideoUserListSubscriptionsResponse) Reset() {
	*x = MovideoUserListSubscriptionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_manager_service_api_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovideoUserListSubscriptionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovideoUserListSubscriptionsResponse) ProtoMessage() {}

func (x *MovideoUserListSubscriptionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_manager_service_api_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovideoUserListSubscriptionsResponse.ProtoReflect.Descriptor instead.
func (*MovideoUserListSubscriptionsResponse) Descriptor() ([]byte, []int) {
	return file_user_manager_service_api_proto_rawDescGZIP(), []int{41}
}

func (x *MovideoUserListSubscriptionsResponse) GetSubscriptions() []*movideo.SubscriptionInfo {
	if x != nil {
		return x.Subscriptions
	}
	return nil
}

type MovideoUserGetSubscriptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId         string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	SubscriptionId string `protobuf:"bytes,2,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
}

func (x *MovideoUserGetSubscriptionRequest) Reset() {
	*x = MovideoUserGetSubscriptionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_manager_service_api_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovideoUserGetSubscriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovideoUserGetSubscriptionRequest) ProtoMessage() {}

func (x *MovideoUserGetSubscriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_manager_service_api_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovideoUserGetSubscriptionRequest.ProtoReflect.Descriptor instead.
func (*MovideoUserGetSubscriptionRequest) Descriptor() ([]byte, []int) {
	return file_user_manager_service_api_proto_rawDescGZIP(), []int{42}
}

func (x *MovideoUserGetSubscriptionRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *MovideoUserGetSubscriptionRequest) GetSubscriptionId() string {
	if x != nil {
		return x.SubscriptionId
	}
	return ""
}

type MovideoUserGetSubscriptionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subscription *movideo.SubscriptionInfo `protobuf:"bytes,1,opt,name=subscription,proto3" json:"subscription,omitempty"`
}

func (x *MovideoUserGetSubscriptionResponse) Reset() {
	*x = MovideoUserGetSubscriptionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_manager_service_api_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovideoUserGetSubscriptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovideoUserGetSubscriptionResponse) ProtoMessage() {}

func (x *MovideoUserGetSubscriptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_manager_service_api_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovideoUserGetSubscriptionResponse.ProtoReflect.Descriptor instead.
func (*MovideoUserGetSubscriptionResponse) Descriptor() ([]byte, []int) {
	return file_user_manager_service_api_proto_rawDescGZIP(), []int{43}
}

func (x *MovideoUserGetSubscriptionResponse) GetSubscription() *movideo.SubscriptionInfo {
	if x != nil {
		return x.Subscription
	}
	return nil
}

type MovideoSubscriptionEventRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventMessage string `protobuf:"bytes,1,opt,name=event_message,json=eventMessage,proto3" json:"event_message,omitempty"`
}

func (x *MovideoSubscriptionEventRequest) Reset() {
	*x = MovideoSubscriptionEventRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_manager_service_api_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovideoSubscriptionEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovideoSubscriptionEventRequest) ProtoMessage() {}

func (x *MovideoSubscriptionEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_manager_service_api_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovideoSubscriptionEventRequest.ProtoReflect.Descriptor instead.
func (*MovideoSubscriptionEventRequest) Descriptor() ([]byte, []int) {
	return file_user_manager_service_api_proto_rawDescGZIP(), []int{44}
}

func (x *MovideoSubscriptionEventRequest) GetEventMessage() string {
	if x != nil {
		return x.EventMessage
	}
	return ""
}

type MovideoSubscriptionEventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MovideoSubscriptionEventResponse) Reset() {
	*x = MovideoSubscriptionEventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_manager_service_api_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovideoSubscriptionEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovideoSubscriptionEventResponse) ProtoMessage() {}

func (x *MovideoSubscriptionEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_manager_service_api_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovideoSubscriptionEventResponse.ProtoReflect.Descriptor instead.
func (*MovideoSubscriptionEventResponse) Descriptor() ([]byte, []int) {
	return file_user_manager_service_api_proto_rawDescGZIP(), []int{45}
}

var File_user_manager_service_api_proto protoreflect.FileDescriptor

var file_user_manager_service_api_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x75, 0x73, 0x65, 0x72, 0x2d, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2d, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x2e, 0x77, 0x61, 0x74, 0x69, 0x2e, 0x61, 0x69, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61,
	0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x63,
	0x6f, 0x6d, 0x6d, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x6d, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf7, 0x02, 0x0a, 0x1c, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x41, 0x6e, 0x64, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x06, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x77, 0x61, 0x74,
	0x69, 0x2e, 0x61, 0x69, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x53,
	0x45, 0x52, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x75, 0x0a, 0x0a, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x56, 0x2e, 0x77, 0x61, 0x74, 0x69, 0x2e, 0x61, 0x69, 0x5f, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x41, 0x6e, 0x64, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x54, 0x59, 0x50, 0x45, 0x52, 0x09, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x78, 0x74,
	0x72, 0x61, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65,
	0x78, 0x74, 0x72, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x49, 0x0a, 0x09, 0x4c, 0x4f, 0x47, 0x49,
	0x4e, 0x54, 0x59, 0x50, 0x45, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x41, 0x53, 0x53, 0x57, 0x4f, 0x52, 0x44, 0x10, 0x01,
	0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x45, 0x52, 0x10, 0x02, 0x12, 0x13,
	0x0a, 0x0f, 0x46, 0x4f, 0x52, 0x47, 0x45, 0x54, 0x5f, 0x50, 0x41, 0x53, 0x53, 0x57, 0x4f, 0x52,
	0x44, 0x10, 0x03, 0x22, 0x6f, 0x0a, 0x1d, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x41, 0x6e, 0x64, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x75, 0x74,
	0x68, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x55, 0x72, 0x6c, 0x22, 0x31, 0x0a, 0x19, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x52, 0x65, 0x73,
	0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x1c, 0x0a, 0x1a, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2e, 0x0a, 0x16, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x55, 0x73,
	0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x19, 0x0a, 0x17, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x55, 0x73,
	0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x2d, 0x0a, 0x12, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x15, 0x0a, 0x13, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2e, 0x0a, 0x13, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x55,
	0x73, 0x65, 0x72, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x55, 0x0a, 0x14, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x55,
	0x73, 0x65, 0x72, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d,
	0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x77,
	0x61, 0x74, 0x69, 0x2e, 0x61, 0x69, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0xd3, 0x01,
	0x0a, 0x16, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x55, 0x73, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x75, 0x61, 0x67, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x61, 0x6e, 0x67, 0x65, 0x75, 0x61, 0x67,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x58, 0x0a, 0x17, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x55, 0x73, 0x65, 0x72,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d,
	0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x77,
	0x61, 0x74, 0x69, 0x2e, 0x61, 0x69, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x65, 0x0a,
	0x0f, 0x55, 0x73, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x3e, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a,
	0x2e, 0x77, 0x61, 0x74, 0x69, 0x2e, 0x61, 0x69, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x41, 0x55, 0x54, 0x48, 0x54, 0x59, 0x50, 0x45, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x61, 0x75, 0x74, 0x68, 0x22, 0xb0, 0x01, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x41, 0x75, 0x74,
	0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x3e, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x2a, 0x2e, 0x77, 0x61, 0x74, 0x69, 0x2e, 0x61, 0x69, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x53, 0x45, 0x52, 0x54, 0x59, 0x50, 0x45, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x43, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x77, 0x61, 0x74, 0x69, 0x2e, 0x61, 0x69, 0x5f, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x52, 0x07,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x22, 0xa3, 0x01, 0x0a, 0x1c, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x55, 0x73, 0x65, 0x72, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x46, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x2e, 0x2e, 0x77, 0x61, 0x74, 0x69, 0x2e, 0x61, 0x69, 0x5f, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x41, 0x50, 0x49, 0x4b, 0x45, 0x59, 0x41, 0x43, 0x54, 0x49, 0x4f,
	0x4e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x65, 0x0a,
	0x1d, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x55, 0x73, 0x65, 0x72, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44,
	0x0a, 0x07, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x77, 0x61, 0x74, 0x69, 0x2e, 0x61, 0x69, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x69, 0x2e, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x61, 0x70,
	0x69, 0x4b, 0x65, 0x79, 0x22, 0x35, 0x0a, 0x1a, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x55, 0x73, 0x65,
	0x72, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x5e, 0x0a, 0x1b, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x55, 0x73, 0x65, 0x72, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x04, 0x6b, 0x65,
	0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x77, 0x61, 0x74, 0x69, 0x2e,
	0x61, 0x69, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x2e, 0x41, 0x50, 0x49, 0x4b, 0x65,
	0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x22, 0xc3, 0x01, 0x0a, 0x1f,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x55, 0x73, 0x65, 0x72, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x55,
	0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x44, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x77, 0x61, 0x74, 0x69, 0x2e,
	0x61, 0x69, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x41, 0x53, 0x4b,
	0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x41,
	0x0a, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x77, 0x61, 0x74, 0x69, 0x2e, 0x61, 0x69, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x05, 0x72, 0x61, 0x6e, 0x67,
	0x65, 0x22, 0x68, 0x0a, 0x20, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x55, 0x73, 0x65, 0x72, 0x43, 0x72,
	0x65, 0x64, 0x69, 0x74, 0x55, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x06, 0x75, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x77, 0x61, 0x74, 0x69, 0x2e, 0x61, 0x69, 0x5f,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x55, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x06, 0x75, 0x73, 0x61, 0x67, 0x65, 0x73, 0x22, 0x96, 0x01, 0x0a, 0x20,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x42, 0x61, 0x74, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x73, 0x41,
	0x64, 0x64, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x73, 0x12, 0x37, 0x0a, 0x09, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x41, 0x74, 0x22, 0x61, 0x0a, 0x21, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x73, 0x41, 0x64, 0x64, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x04, 0x72, 0x65, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x77, 0x61, 0x74, 0x69, 0x2e, 0x61,
	0x69, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x04, 0x72, 0x65, 0x74, 0x73, 0x22, 0x84, 0x02, 0x0a, 0x1e, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x55, 0x73, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x43,
	0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x73, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x65, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x65,
	0x74, 0x61, 0x12, 0x44, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x77, 0x61, 0x74, 0x69, 0x2e, 0x61, 0x69, 0x5f, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x41, 0x53, 0x4b, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x44, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x77, 0x61, 0x74, 0x69, 0x2e,
	0x61, 0x69, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x41, 0x53, 0x4b,
	0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x21,
	0x0a, 0x1f, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x55, 0x73, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x43,
	0x72, 0x65, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x3a, 0x0a, 0x1d, 0x4d, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x73, 0x65, 0x72,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x64, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x6f, 0x0a,
	0x1e, 0x4d, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1e,
	0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x6e, 0x65, 0x77, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x4e, 0x65, 0x77, 0x55, 0x73, 0x65, 0x72, 0x22, 0x33,
	0x0a, 0x18, 0x4d, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67,
	0x6f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x1b, 0x0a, 0x19, 0x4d, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x73,
	0x65, 0x72, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x30, 0x0a, 0x15, 0x4d, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x62, 0x0a, 0x16, 0x4d, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x73, 0x65,
	0x72, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x09,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x77, 0x61, 0x74, 0x69, 0x2e, 0x61, 0x69, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x6d, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x34, 0x0a, 0x19, 0x4d, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x55, 0x73, 0x65, 0x72, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x1c, 0x0a, 0x1a,
	0x4d, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x55, 0x70, 0x67, 0x72, 0x61,
	0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x35, 0x0a, 0x1a, 0x4d, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x47, 0x65, 0x74, 0x55, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x49, 0x0a, 0x1b, 0x4d, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x73, 0x65, 0x72,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x75, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xab, 0x01, 0x0a,
	0x1d, 0x4d, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x43, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x63, 0x6f, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x77, 0x61, 0x74, 0x69, 0x2e, 0x61, 0x69, 0x5f, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x41, 0x53, 0x4b, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x20, 0x0a, 0x1e, 0x4d, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x43, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x33, 0x0a, 0x18,
	0x4d, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x1b, 0x0a, 0x19, 0x4d, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x73, 0x65, 0x72,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xab,
	0x02, 0x0a, 0x21, 0x4d, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x65,
	0x77, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x24, 0x0a,
	0x0e, 0x72, 0x63, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x63, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x0b, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x5f,
	0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x74,
	0x12, 0x4a, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x34, 0x2e, 0x77, 0x61, 0x74, 0x69, 0x2e, 0x61, 0x69, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x45, 0x56, 0x45, 0x4e, 0x54, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x3e, 0x0a, 0x04,
	0x70, 0x6c, 0x61, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x77, 0x61, 0x74,
	0x69, 0x2e, 0x61, 0x69, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x53,
	0x45, 0x52, 0x54, 0x59, 0x50, 0x45, 0x52, 0x04, 0x70, 0x6c, 0x61, 0x6e, 0x22, 0x24, 0x0a, 0x22,
	0x4d, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x65, 0x77, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x3e, 0x0a, 0x23, 0x4d, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x73, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x81, 0x01, 0x0a, 0x24, 0x4d, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x73,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x0d, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x33, 0x2e, 0x77, 0x61, 0x74, 0x69, 0x2e, 0x61, 0x69, 0x5f, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x6d,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x65, 0x0a, 0x21, 0x4d, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x55, 0x73, 0x65, 0x72, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x7d, 0x0a,
	0x22, 0x4d, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x47, 0x65, 0x74, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x77, 0x61, 0x74, 0x69,
	0x2e, 0x61, 0x69, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x6d, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x46, 0x0a, 0x1f,
	0x4d, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x23, 0x0a, 0x0d, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x22, 0x0a, 0x20, 0x4d, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xad, 0x26, 0x0a, 0x12, 0x55, 0x73, 0x65,
	0x72, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0xd0, 0x01, 0x0a, 0x15, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x41, 0x6e,
	0x64, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x4c, 0x2e, 0x77, 0x61, 0x74, 0x69,
	0x2e, 0x61, 0x69, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x41, 0x6e, 0x64, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4d, 0x2e, 0x77, 0x61, 0x74, 0x69, 0x2e, 0x61,
	0x69, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x41, 0x6e, 0x64, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x3a, 0x01,
	0x2a, 0x22, 0x0f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x6f, 0x67,
	0x69, 0x6e, 0x12, 0xd0, 0x01, 0x0a, 0x12, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x52, 0x65, 0x73, 0x65,
	0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x49, 0x2e, 0x77, 0x61, 0x74, 0x69,
	0x2e, 0x61, 0x69, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x4a, 0x2e, 0x77, 0x61, 0x74, 0x69, 0x2e, 0x61, 0x69, 0x5f, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x52, 0x65, 0x73, 0x65, 0x74,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x3a, 0x01, 0x2a, 0x22, 0x18, 0x2f, 0x63, 0x6f,
	0x6d, 0x6d, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0xbf, 0x01, 0x0a, 0x0f, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x55,
	0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x46, 0x2e, 0x77, 0x61, 0x74, 0x69,
	0x2e, 0x61, 0x69, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x47, 0x2e, 0x77, 0x61, 0x74, 0x69, 0x2e, 0x61, 0x69, 0x5f, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x15, 0x3a, 0x01, 0x2a, 0x22, 0x10, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0xc3, 0x01, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x12, 0x42, 0x2e, 0x77, 0x61, 0x74, 0x69, 0x2e, 0x61,
	0x69, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x4c, 0x6f,
	0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x43, 0x2e, 0x77, 0x61,
	0x74, 0x69, 0x2e, 0x61, 0x69, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x3a, 0x01, 0x2a, 0x22, 0x20, 0x2f, 0x63, 0x6f,
	0x6d, 0x6d, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x12, 0xbc, 0x01,
	0x0a, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x55, 0x73, 0x65, 0x72, 0x47, 0x65, 0x74, 0x12, 0x43,
	0x2e, 0x77, 0x61, 0x74, 0x69, 0x2e, 0x61, 0x69, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x55, 0x73, 0x65, 0x72, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x44, 0x2e, 0x77, 0x61, 0x74, 0x69, 0x2e, 0x61, 0x69, 0x5f, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x55, 0x73, 0x65, 0x72, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1b, 0x12, 0x19, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0xc8, 0x01, 0x0a,
	0x0f, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x55, 0x73, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x46, 0x2e, 0x77, 0x61, 0x74, 0x69, 0x2e, 0x61, 0x69, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x55, 0x73, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x47, 0x2e, 0x77, 0x61, 0x74, 0x69, 0x2e,
	0x61, 0x69, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x55,
	0x73, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x3a, 0x01, 0x2a, 0x32, 0x19, 0x2f, 0x63,
	0x6f, 0x6d, 0x6d, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0xe3, 0x01, 0x0a, 0x15, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x55, 0x73, 0x65, 0x72, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x4c, 0x2e, 0x77, 0x61, 0x74, 0x69, 0x2e, 0x61, 0x69, 0x5f, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x55, 0x73, 0x65, 0x72, 0x41, 0x50, 0x49, 0x4b,
	0x65, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x4d, 0x2e, 0x77, 0x61, 0x74, 0x69, 0x2e, 0x61, 0x69, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x55, 0x73, 0x65, 0x72, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2d,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x3a, 0x01, 0x2a, 0x22, 0x22, 0x2f, 0x63, 0x6f, 0x6d, 0x6d,
	0x69, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x12, 0xda, 0x01,
	0x0a, 0x13, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x55, 0x73, 0x65, 0x72, 0x41, 0x50, 0x49, 0x4b, 0x65,
	0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x4a, 0x2e, 0x77, 0x61, 0x74, 0x69, 0x2e, 0x61, 0x69, 0x5f,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x55, 0x73, 0x65, 0x72,
	0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x4b, 0x2e, 0x77, 0x61, 0x74, 0x69, 0x2e, 0x61, 0x69, 0x5f, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x55, 0x73, 0x65, 0x72, 0x41, 0x50, 0x49, 0x4b,
	0x65, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x12, 0x22, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x7d, 0x2f, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x12, 0xef, 0x01, 0x0a, 0x18, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x55, 0x73, 0x65, 0x72, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x55, 0x73,
	0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x4f, 0x2e, 0x77, 0x61, 0x74, 0x69, 0x2e, 0x61,
	0x69, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x55, 0x73,
	0x65, 0x72, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x55, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x50, 0x2e, 0x77, 0x61, 0x74, 0x69, 0x2e,
	0x61, 0x69, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x55,
	0x73, 0x65, 0x72, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x55, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x30, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x2a, 0x12, 0x28, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x63, 0x72,
	0x65, 0x64, 0x69, 0x74, 0x73, 0x2f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0xde, 0x01, 0x0a,
	0x19, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x42, 0x61, 0x74, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x41, 0x64, 0x64, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x73, 0x12, 0x50, 0x2e, 0x77, 0x61, 0x74,
	0x69, 0x2e, 0x61, 0x69, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x42, 0x61, 0x74, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x73, 0x41, 0x64, 0x64, 0x43, 0x72,
	0x65, 0x64, 0x69, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x51, 0x2e, 0x77,
	0x61, 0x74, 0x69, 0x2e, 0x61, 0x69, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x42, 0x61, 0x74, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x73, 0x41, 0x64, 0x64,
	0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x3a, 0x01, 0x2a, 0x22, 0x11, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x73, 0x12, 0xba, 0x01,
	0x0a, 0x17, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x55, 0x73, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x43,
	0x72, 0x65, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x4e, 0x2e, 0x77, 0x61, 0x74, 0x69,
	0x2e, 0x61, 0x69, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x55, 0x73, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x43, 0x6f,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4f, 0x2e, 0x77, 0x61, 0x74, 0x69,
	0x2e, 0x61, 0x69, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x55, 0x73, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x43, 0x6f,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xe2, 0x01, 0x0a, 0x16, 0x4d,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x4d, 0x2e, 0x77, 0x61, 0x74, 0x69, 0x2e, 0x61, 0x69, 0x5f,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x73,
	0x65, 0x72, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x4e, 0x2e, 0x77, 0x61, 0x74, 0x69, 0x2e, 0x61, 0x69, 0x5f, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x73, 0x65,
	0x72, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x3a, 0x01, 0x2a, 0x22,
	0x1e, 0x2f, 0x6d, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x2f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x2d, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0xd7, 0x01, 0x0a, 0x11, 0x4d, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x4c,
	0x6f, 0x67, 0x6f, 0x75, 0x74, 0x12, 0x48, 0x2e, 0x77, 0x61, 0x74, 0x69, 0x2e, 0x61, 0x69, 0x5f,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x73,
	0x65, 0x72, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x49, 0x2e, 0x77, 0x61, 0x74, 0x69, 0x2e, 0x61, 0x69, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x6f,
	0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2d, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x27, 0x3a, 0x01, 0x2a, 0x22, 0x22, 0x2f, 0x6d, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2f,
	0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x7d, 0x2f, 0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x12, 0xc4, 0x01, 0x0a, 0x0e, 0x4d, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x47, 0x65, 0x74, 0x12, 0x45, 0x2e, 0x77,
	0x61, 0x74, 0x69, 0x2e, 0x61, 0x69, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x46, 0x2e, 0x77, 0x61, 0x74, 0x69, 0x2e, 0x61, 0x69, 0x5f, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x73, 0x65, 0x72,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1d, 0x12, 0x1b, 0x2f, 0x6d, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2f, 0x76, 0x31,
	0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d,
	0x12, 0xd0, 0x01, 0x0a, 0x12, 0x4d, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x73, 0x65, 0x72,
	0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x12, 0x49, 0x2e, 0x77, 0x61, 0x74, 0x69, 0x2e, 0x61,
	0x69, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x55, 0x73, 0x65, 0x72, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x4a, 0x2e, 0x77, 0x61, 0x74, 0x69, 0x2e, 0x61, 0x69, 0x5f, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x55,
	0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x32, 0x1b, 0x2f, 0x6d, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x7d, 0x12, 0xcd, 0x01, 0x0a, 0x11, 0x4d, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x55,
	0x73, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x48, 0x2e, 0x77, 0x61, 0x74, 0x69,
	0x2e, 0x61, 0x69, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x49, 0x2e, 0x77, 0x61, 0x74, 0x69, 0x2e, 0x61, 0x69, 0x5f, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x73, 0x65, 0x72,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x2a, 0x1b, 0x2f, 0x6d, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x7d, 0x12, 0xdb, 0x01, 0x0a, 0x13, 0x4d, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x55,
	0x73, 0x65, 0x72, 0x47, 0x65, 0x74, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4a, 0x2e, 0x77, 0x61,
	0x74, 0x69, 0x2e, 0x61, 0x69, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x47, 0x65, 0x74, 0x55, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4b, 0x2e, 0x77, 0x61, 0x74, 0x69, 0x2e, 0x61,
	0x69, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x55, 0x73, 0x65, 0x72, 0x47, 0x65, 0x74, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x12, 0x23, 0x2f, 0x6d,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f,
	0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x12, 0xf6, 0x01, 0x0a, 0x1a, 0x4d, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x73, 0x65,
	0x72, 0x4e, 0x65, 0x77, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x51, 0x2e, 0x77, 0x61, 0x74, 0x69, 0x2e, 0x61, 0x69, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x65, 0x77,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x52, 0x2e, 0x77, 0x61, 0x74, 0x69, 0x2e, 0x61, 0x69, 0x5f, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x73, 0x65, 0x72,
	0x4e, 0x65, 0x77, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x31, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x3a,
	0x01, 0x2a, 0x22, 0x26, 0x2f, 0x6d, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2f, 0x76, 0x31, 0x2f,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x73, 0x12, 0xf9, 0x01, 0x0a, 0x1c, 0x4d,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x53, 0x2e, 0x77, 0x61,
	0x74, 0x69, 0x2e, 0x61, 0x69, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x54, 0x2e, 0x77, 0x61, 0x74, 0x69, 0x2e, 0x61, 0x69, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x12, 0x26,
	0x2f, 0x6d, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x73, 0x12, 0x85, 0x02, 0x0a, 0x1a, 0x4d, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x51, 0x2e, 0x77, 0x61, 0x74, 0x69, 0x2e, 0x61, 0x69, 0x5f,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x73,
	0x65, 0x72, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x52, 0x2e, 0x77, 0x61, 0x74, 0x69, 0x2e,
	0x61, 0x69, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x55, 0x73, 0x65, 0x72, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x40, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x3a, 0x12, 0x38, 0x2f, 0x6d, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2f, 0x76,
	0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x7d, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x73, 0x2f, 0x7b, 0x73, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0xb7,
	0x01, 0x0a, 0x16, 0x4d, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x4d, 0x2e, 0x77, 0x61, 0x74, 0x69,
	0x2e, 0x61, 0x69, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4e, 0x2e, 0x77, 0x61, 0x74, 0x69, 0x2e,
	0x61, 0x69, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xbd, 0x01, 0x0a, 0x18, 0x4d, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x4f, 0x2e, 0x77, 0x61, 0x74, 0x69, 0x2e, 0x61, 0x69, 0x5f,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x50, 0x2e, 0x77, 0x61, 0x74, 0x69, 0x2e, 0x61, 0x69,
	0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8d, 0x01, 0x0a, 0x08, 0x55, 0x73, 0x65,
	0x72, 0x41, 0x75, 0x74, 0x68, 0x12, 0x3f, 0x2e, 0x77, 0x61, 0x74, 0x69, 0x2e, 0x61, 0x69, 0x5f,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x40, 0x2e, 0x77, 0x61, 0x74, 0x69, 0x2e, 0x61, 0x69,
	0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x64, 0x92, 0x41, 0x1f, 0x12, 0x1d, 0x0a,
	0x14, 0x55, 0x73, 0x65, 0x72, 0x20, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x20, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x32, 0x05, 0x31, 0x2e, 0x30, 0x2e, 0x30, 0x5a, 0x40, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x43, 0x6c, 0x61, 0x72, 0x65, 0x41, 0x49,
	0x2f, 0x61, 0x69, 0x2d, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2d, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2d, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_user_manager_service_api_proto_rawDescOnce sync.Once
	file_user_manager_service_api_proto_rawDescData = file_user_manager_service_api_proto_rawDesc
)

func file_user_manager_service_api_proto_rawDescGZIP() []byte {
	file_user_manager_service_api_proto_rawDescOnce.Do(func() {
		file_user_manager_service_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_user_manager_service_api_proto_rawDescData)
	})
	return file_user_manager_service_api_proto_rawDescData
}

var file_user_manager_service_api_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_user_manager_service_api_proto_msgTypes = make([]protoimpl.MessageInfo, 46)
var file_user_manager_service_api_proto_goTypes = []interface{}{
	(CommiLoginAndRegisterRequest_LOGINTYPE)(0),  // 0: wati.ai_platform.protocol.user_manager_service.CommiLoginAndRegisterRequest.LOGINTYPE
	(*CommiLoginAndRegisterRequest)(nil),         // 1: wati.ai_platform.protocol.user_manager_service.CommiLoginAndRegisterRequest
	(*CommiLoginAndRegisterResponse)(nil),        // 2: wati.ai_platform.protocol.user_manager_service.CommiLoginAndRegisterResponse
	(*CommiResetPasswordRequest)(nil),            // 3: wati.ai_platform.protocol.user_manager_service.CommiResetPasswordRequest
	(*CommiResetPasswordResponse)(nil),           // 4: wati.ai_platform.protocol.user_manager_service.CommiResetPasswordResponse
	(*CommiUserActiveRequest)(nil),               // 5: wati.ai_platform.protocol.user_manager_service.CommiUserActiveRequest
	(*CommiUserActiveResponse)(nil),              // 6: wati.ai_platform.protocol.user_manager_service.CommiUserActiveResponse
	(*CommiLogoutRequest)(nil),                   // 7: wati.ai_platform.protocol.user_manager_service.CommiLogoutRequest
	(*CommiLogoutResponse)(nil),                  // 8: wati.ai_platform.protocol.user_manager_service.CommiLogoutResponse
	(*CommiUserGetRequest)(nil),                  // 9: wati.ai_platform.protocol.user_manager_service.CommiUserGetRequest
	(*CommiUserGetResponse)(nil),                 // 10: wati.ai_platform.protocol.user_manager_service.CommiUserGetResponse
	(*CommiUserUpdateRequest)(nil),               // 11: wati.ai_platform.protocol.user_manager_service.CommiUserUpdateRequest
	(*CommiUserUpdateResponse)(nil),              // 12: wati.ai_platform.protocol.user_manager_service.CommiUserUpdateResponse
	(*UserAuthRequest)(nil),                      // 13: wati.ai_platform.protocol.user_manager_service.UserAuthRequest
	(*UserAuthResponse)(nil),                     // 14: wati.ai_platform.protocol.user_manager_service.UserAuthResponse
	(*CommiUserAPIKeyActionRequest)(nil),         // 15: wati.ai_platform.protocol.user_manager_service.CommiUserAPIKeyActionRequest
	(*CommiUserAPIKeyActionResponse)(nil),        // 16: wati.ai_platform.protocol.user_manager_service.CommiUserAPIKeyActionResponse
	(*CommiUserAPIKeyListRequest)(nil),           // 17: wati.ai_platform.protocol.user_manager_service.CommiUserAPIKeyListRequest
	(*CommiUserAPIKeyListResponse)(nil),          // 18: wati.ai_platform.protocol.user_manager_service.CommiUserAPIKeyListResponse
	(*CommiUserCreditUsageListRequest)(nil),      // 19: wati.ai_platform.protocol.user_manager_service.CommiUserCreditUsageListRequest
	(*CommiUserCreditUsageListResponse)(nil),     // 20: wati.ai_platform.protocol.user_manager_service.CommiUserCreditUsageListResponse
	(*CommiBatchUsersAddCreditsRequest)(nil),     // 21: wati.ai_platform.protocol.user_manager_service.CommiBatchUsersAddCreditsRequest
	(*CommiBatchUsersAddCreditsResponse)(nil),    // 22: wati.ai_platform.protocol.user_manager_service.CommiBatchUsersAddCreditsResponse
	(*CommiUserTaskCreditCostRequest)(nil),       // 23: wati.ai_platform.protocol.user_manager_service.CommiUserTaskCreditCostRequest
	(*CommiUserTaskCreditCostResponse)(nil),      // 24: wati.ai_platform.protocol.user_manager_service.CommiUserTaskCreditCostResponse
	(*MovideoUserVerifyTokenRequest)(nil),        // 25: wati.ai_platform.protocol.user_manager_service.MovideoUserVerifyTokenRequest
	(*MovideoUserVerifyTokenResponse)(nil),       // 26: wati.ai_platform.protocol.user_manager_service.MovideoUserVerifyTokenResponse
	(*MovideoUserLogoutRequest)(nil),             // 27: wati.ai_platform.protocol.user_manager_service.MovideoUserLogoutRequest
	(*MovideoUserLogoutResponse)(nil),            // 28: wati.ai_platform.protocol.user_manager_service.MovideoUserLogoutResponse
	(*MovideoUserGetRequest)(nil),                // 29: wati.ai_platform.protocol.user_manager_service.MovideoUserGetRequest
	(*MovideoUserGetResponse)(nil),               // 30: wati.ai_platform.protocol.user_manager_service.MovideoUserGetResponse
	(*MovideoUserUpgradeRequest)(nil),            // 31: wati.ai_platform.protocol.user_manager_service.MovideoUserUpgradeRequest
	(*MovideoUserUpgradeResponse)(nil),           // 32: wati.ai_platform.protocol.user_manager_service.MovideoUserUpgradeResponse
	(*MovideoUserGetUsageRequest)(nil),           // 33: wati.ai_platform.protocol.user_manager_service.MovideoUserGetUsageRequest
	(*MovideoUserGetUsageResponse)(nil),          // 34: wati.ai_platform.protocol.user_manager_service.MovideoUserGetUsageResponse
	(*MovideoUserBalanceCostRequest)(nil),        // 35: wati.ai_platform.protocol.user_manager_service.MovideoUserBalanceCostRequest
	(*MovideoUserBalanceCostResponse)(nil),       // 36: wati.ai_platform.protocol.user_manager_service.MovideoUserBalanceCostResponse
	(*MovideoUserDeleteRequest)(nil),             // 37: wati.ai_platform.protocol.user_manager_service.MovideoUserDeleteRequest
	(*MovideoUserDeleteResponse)(nil),            // 38: wati.ai_platform.protocol.user_manager_service.MovideoUserDeleteResponse
	(*MovideoUserNewSubscriptionRequest)(nil),    // 39: wati.ai_platform.protocol.user_manager_service.MovideoUserNewSubscriptionRequest
	(*MovideoUserNewSubscriptionResponse)(nil),   // 40: wati.ai_platform.protocol.user_manager_service.MovideoUserNewSubscriptionResponse
	(*MovideoUserListSubscriptionsRequest)(nil),  // 41: wati.ai_platform.protocol.user_manager_service.MovideoUserListSubscriptionsRequest
	(*MovideoUserListSubscriptionsResponse)(nil), // 42: wati.ai_platform.protocol.user_manager_service.MovideoUserListSubscriptionsResponse
	(*MovideoUserGetSubscriptionRequest)(nil),    // 43: wati.ai_platform.protocol.user_manager_service.MovideoUserGetSubscriptionRequest
	(*MovideoUserGetSubscriptionResponse)(nil),   // 44: wati.ai_platform.protocol.user_manager_service.MovideoUserGetSubscriptionResponse
	(*MovideoSubscriptionEventRequest)(nil),      // 45: wati.ai_platform.protocol.user_manager_service.MovideoSubscriptionEventRequest
	(*MovideoSubscriptionEventResponse)(nil),     // 46: wati.ai_platform.protocol.user_manager_service.MovideoSubscriptionEventResponse
	(common.USERSOURCE)(0),                       // 47: wati.ai_platform.protocol.common.USERSOURCE
	(*commi.UserInfo)(nil),                       // 48: wati.ai_platform.protocol.commi.UserInfo
	(common.AUTHTYPE)(0),                         // 49: wati.ai_platform.protocol.common.AUTHTYPE
	(common.USERTYPE)(0),                         // 50: wati.ai_platform.protocol.common.USERTYPE
	(common.PRODUCT)(0),                          // 51: wati.ai_platform.protocol.common.PRODUCT
	(common.APIKEYACTION)(0),                     // 52: wati.ai_platform.protocol.common.APIKEYACTION
	(*commi.APIKeyInfo)(nil),                     // 53: wati.ai_platform.protocol.commi.APIKeyInfo
	(common.TASKSOURCE)(0),                       // 54: wati.ai_platform.protocol.common.TASKSOURCE
	(*common.TimeRange)(nil),                     // 55: wati.ai_platform.protocol.common.TimeRange
	(*commi.CreditUsage)(nil),                    // 56: wati.ai_platform.protocol.commi.CreditUsage
	(*timestamppb.Timestamp)(nil),                // 57: google.protobuf.Timestamp
	(*common.Result)(nil),                        // 58: wati.ai_platform.protocol.common.Result
	(common.TASKSTATUS)(0),                       // 59: wati.ai_platform.protocol.common.TASKSTATUS
	(*movideo.UserInfo)(nil),                     // 60: wati.ai_platform.protocol.movideo.UserInfo
	(common.SUBSCRIPTION_EVENT)(0),               // 61: wati.ai_platform.protocol.common.SUBSCRIPTION_EVENT
	(*movideo.SubscriptionInfo)(nil),             // 62: wati.ai_platform.protocol.movideo.SubscriptionInfo
}
var file_user_manager_service_api_proto_depIdxs = []int32{
	47, // 0: wati.ai_platform.protocol.user_manager_service.CommiLoginAndRegisterRequest.source:type_name -> wati.ai_platform.protocol.common.USERSOURCE
	0,  // 1: wati.ai_platform.protocol.user_manager_service.CommiLoginAndRegisterRequest.login_type:type_name -> wati.ai_platform.protocol.user_manager_service.CommiLoginAndRegisterRequest.LOGINTYPE
	48, // 2: wati.ai_platform.protocol.user_manager_service.CommiUserGetResponse.user:type_name -> wati.ai_platform.protocol.commi.UserInfo
	48, // 3: wati.ai_platform.protocol.user_manager_service.CommiUserUpdateResponse.user:type_name -> wati.ai_platform.protocol.commi.UserInfo
	49, // 4: wati.ai_platform.protocol.user_manager_service.UserAuthRequest.type:type_name -> wati.ai_platform.protocol.common.AUTHTYPE
	50, // 5: wati.ai_platform.protocol.user_manager_service.UserAuthResponse.type:type_name -> wati.ai_platform.protocol.common.USERTYPE
	51, // 6: wati.ai_platform.protocol.user_manager_service.UserAuthResponse.product:type_name -> wati.ai_platform.protocol.common.PRODUCT
	52, // 7: wati.ai_platform.protocol.user_manager_service.CommiUserAPIKeyActionRequest.action:type_name -> wati.ai_platform.protocol.common.APIKEYACTION
	53, // 8: wati.ai_platform.protocol.user_manager_service.CommiUserAPIKeyActionResponse.api_key:type_name -> wati.ai_platform.protocol.commi.APIKeyInfo
	53, // 9: wati.ai_platform.protocol.user_manager_service.CommiUserAPIKeyListResponse.keys:type_name -> wati.ai_platform.protocol.commi.APIKeyInfo
	54, // 10: wati.ai_platform.protocol.user_manager_service.CommiUserCreditUsageListRequest.source:type_name -> wati.ai_platform.protocol.common.TASKSOURCE
	55, // 11: wati.ai_platform.protocol.user_manager_service.CommiUserCreditUsageListRequest.range:type_name -> wati.ai_platform.protocol.common.TimeRange
	56, // 12: wati.ai_platform.protocol.user_manager_service.CommiUserCreditUsageListResponse.usages:type_name -> wati.ai_platform.protocol.commi.CreditUsage
	57, // 13: wati.ai_platform.protocol.user_manager_service.CommiBatchUsersAddCreditsRequest.expire_at:type_name -> google.protobuf.Timestamp
	58, // 14: wati.ai_platform.protocol.user_manager_service.CommiBatchUsersAddCreditsResponse.rets:type_name -> wati.ai_platform.protocol.common.Result
	59, // 15: wati.ai_platform.protocol.user_manager_service.CommiUserTaskCreditCostRequest.status:type_name -> wati.ai_platform.protocol.common.TASKSTATUS
	54, // 16: wati.ai_platform.protocol.user_manager_service.CommiUserTaskCreditCostRequest.source:type_name -> wati.ai_platform.protocol.common.TASKSOURCE
	60, // 17: wati.ai_platform.protocol.user_manager_service.MovideoUserGetResponse.user_info:type_name -> wati.ai_platform.protocol.movideo.UserInfo
	59, // 18: wati.ai_platform.protocol.user_manager_service.MovideoUserBalanceCostRequest.status:type_name -> wati.ai_platform.protocol.common.TASKSTATUS
	57, // 19: wati.ai_platform.protocol.user_manager_service.MovideoUserNewSubscriptionRequest.purchase_at:type_name -> google.protobuf.Timestamp
	61, // 20: wati.ai_platform.protocol.user_manager_service.MovideoUserNewSubscriptionRequest.event:type_name -> wati.ai_platform.protocol.common.SUBSCRIPTION_EVENT
	50, // 21: wati.ai_platform.protocol.user_manager_service.MovideoUserNewSubscriptionRequest.plan:type_name -> wati.ai_platform.protocol.common.USERTYPE
	62, // 22: wati.ai_platform.protocol.user_manager_service.MovideoUserListSubscriptionsResponse.subscriptions:type_name -> wati.ai_platform.protocol.movideo.SubscriptionInfo
	62, // 23: wati.ai_platform.protocol.user_manager_service.MovideoUserGetSubscriptionResponse.subscription:type_name -> wati.ai_platform.protocol.movideo.SubscriptionInfo
	1,  // 24: wati.ai_platform.protocol.user_manager_service.UserManagerService.CommiLoginAndRegister:input_type -> wati.ai_platform.protocol.user_manager_service.CommiLoginAndRegisterRequest
	3,  // 25: wati.ai_platform.protocol.user_manager_service.UserManagerService.CommiResetPassword:input_type -> wati.ai_platform.protocol.user_manager_service.CommiResetPasswordRequest
	5,  // 26: wati.ai_platform.protocol.user_manager_service.UserManagerService.CommiUserActive:input_type -> wati.ai_platform.protocol.user_manager_service.CommiUserActiveRequest
	7,  // 27: wati.ai_platform.protocol.user_manager_service.UserManagerService.CommiLogout:input_type -> wati.ai_platform.protocol.user_manager_service.CommiLogoutRequest
	9,  // 28: wati.ai_platform.protocol.user_manager_service.UserManagerService.CommiUserGet:input_type -> wati.ai_platform.protocol.user_manager_service.CommiUserGetRequest
	11, // 29: wati.ai_platform.protocol.user_manager_service.UserManagerService.CommiUserUpdate:input_type -> wati.ai_platform.protocol.user_manager_service.CommiUserUpdateRequest
	15, // 30: wati.ai_platform.protocol.user_manager_service.UserManagerService.CommiUserAPIKeyAction:input_type -> wati.ai_platform.protocol.user_manager_service.CommiUserAPIKeyActionRequest
	17, // 31: wati.ai_platform.protocol.user_manager_service.UserManagerService.CommiUserAPIKeyList:input_type -> wati.ai_platform.protocol.user_manager_service.CommiUserAPIKeyListRequest
	19, // 32: wati.ai_platform.protocol.user_manager_service.UserManagerService.CommiUserCreditUsageList:input_type -> wati.ai_platform.protocol.user_manager_service.CommiUserCreditUsageListRequest
	21, // 33: wati.ai_platform.protocol.user_manager_service.UserManagerService.CommiBatchUsersAddCredits:input_type -> wati.ai_platform.protocol.user_manager_service.CommiBatchUsersAddCreditsRequest
	23, // 34: wati.ai_platform.protocol.user_manager_service.UserManagerService.CommiUserTaskCreditCost:input_type -> wati.ai_platform.protocol.user_manager_service.CommiUserTaskCreditCostRequest
	25, // 35: wati.ai_platform.protocol.user_manager_service.UserManagerService.MovideoUserVerifyToken:input_type -> wati.ai_platform.protocol.user_manager_service.MovideoUserVerifyTokenRequest
	27, // 36: wati.ai_platform.protocol.user_manager_service.UserManagerService.MovideoUserLogout:input_type -> wati.ai_platform.protocol.user_manager_service.MovideoUserLogoutRequest
	29, // 37: wati.ai_platform.protocol.user_manager_service.UserManagerService.MovideoUserGet:input_type -> wati.ai_platform.protocol.user_manager_service.MovideoUserGetRequest
	31, // 38: wati.ai_platform.protocol.user_manager_service.UserManagerService.MovideoUserUpgrade:input_type -> wati.ai_platform.protocol.user_manager_service.MovideoUserUpgradeRequest
	37, // 39: wati.ai_platform.protocol.user_manager_service.UserManagerService.MovideoUserDelete:input_type -> wati.ai_platform.protocol.user_manager_service.MovideoUserDeleteRequest
	33, // 40: wati.ai_platform.protocol.user_manager_service.UserManagerService.MovideoUserGetUsage:input_type -> wati.ai_platform.protocol.user_manager_service.MovideoUserGetUsageRequest
	39, // 41: wati.ai_platform.protocol.user_manager_service.UserManagerService.MovideoUserNewSubscription:input_type -> wati.ai_platform.protocol.user_manager_service.MovideoUserNewSubscriptionRequest
	41, // 42: wati.ai_platform.protocol.user_manager_service.UserManagerService.MovideoUserListSubscriptions:input_type -> wati.ai_platform.protocol.user_manager_service.MovideoUserListSubscriptionsRequest
	43, // 43: wati.ai_platform.protocol.user_manager_service.UserManagerService.MovideoUserGetSubscription:input_type -> wati.ai_platform.protocol.user_manager_service.MovideoUserGetSubscriptionRequest
	35, // 44: wati.ai_platform.protocol.user_manager_service.UserManagerService.MovideoUserBalanceCost:input_type -> wati.ai_platform.protocol.user_manager_service.MovideoUserBalanceCostRequest
	45, // 45: wati.ai_platform.protocol.user_manager_service.UserManagerService.MovideoSubscriptionEvent:input_type -> wati.ai_platform.protocol.user_manager_service.MovideoSubscriptionEventRequest
	13, // 46: wati.ai_platform.protocol.user_manager_service.UserManagerService.UserAuth:input_type -> wati.ai_platform.protocol.user_manager_service.UserAuthRequest
	2,  // 47: wati.ai_platform.protocol.user_manager_service.UserManagerService.CommiLoginAndRegister:output_type -> wati.ai_platform.protocol.user_manager_service.CommiLoginAndRegisterResponse
	4,  // 48: wati.ai_platform.protocol.user_manager_service.UserManagerService.CommiResetPassword:output_type -> wati.ai_platform.protocol.user_manager_service.CommiResetPasswordResponse
	6,  // 49: wati.ai_platform.protocol.user_manager_service.UserManagerService.CommiUserActive:output_type -> wati.ai_platform.protocol.user_manager_service.CommiUserActiveResponse
	8,  // 50: wati.ai_platform.protocol.user_manager_service.UserManagerService.CommiLogout:output_type -> wati.ai_platform.protocol.user_manager_service.CommiLogoutResponse
	10, // 51: wati.ai_platform.protocol.user_manager_service.UserManagerService.CommiUserGet:output_type -> wati.ai_platform.protocol.user_manager_service.CommiUserGetResponse
	12, // 52: wati.ai_platform.protocol.user_manager_service.UserManagerService.CommiUserUpdate:output_type -> wati.ai_platform.protocol.user_manager_service.CommiUserUpdateResponse
	16, // 53: wati.ai_platform.protocol.user_manager_service.UserManagerService.CommiUserAPIKeyAction:output_type -> wati.ai_platform.protocol.user_manager_service.CommiUserAPIKeyActionResponse
	18, // 54: wati.ai_platform.protocol.user_manager_service.UserManagerService.CommiUserAPIKeyList:output_type -> wati.ai_platform.protocol.user_manager_service.CommiUserAPIKeyListResponse
	20, // 55: wati.ai_platform.protocol.user_manager_service.UserManagerService.CommiUserCreditUsageList:output_type -> wati.ai_platform.protocol.user_manager_service.CommiUserCreditUsageListResponse
	22, // 56: wati.ai_platform.protocol.user_manager_service.UserManagerService.CommiBatchUsersAddCredits:output_type -> wati.ai_platform.protocol.user_manager_service.CommiBatchUsersAddCreditsResponse
	24, // 57: wati.ai_platform.protocol.user_manager_service.UserManagerService.CommiUserTaskCreditCost:output_type -> wati.ai_platform.protocol.user_manager_service.CommiUserTaskCreditCostResponse
	26, // 58: wati.ai_platform.protocol.user_manager_service.UserManagerService.MovideoUserVerifyToken:output_type -> wati.ai_platform.protocol.user_manager_service.MovideoUserVerifyTokenResponse
	28, // 59: wati.ai_platform.protocol.user_manager_service.UserManagerService.MovideoUserLogout:output_type -> wati.ai_platform.protocol.user_manager_service.MovideoUserLogoutResponse
	30, // 60: wati.ai_platform.protocol.user_manager_service.UserManagerService.MovideoUserGet:output_type -> wati.ai_platform.protocol.user_manager_service.MovideoUserGetResponse
	32, // 61: wati.ai_platform.protocol.user_manager_service.UserManagerService.MovideoUserUpgrade:output_type -> wati.ai_platform.protocol.user_manager_service.MovideoUserUpgradeResponse
	38, // 62: wati.ai_platform.protocol.user_manager_service.UserManagerService.MovideoUserDelete:output_type -> wati.ai_platform.protocol.user_manager_service.MovideoUserDeleteResponse
	34, // 63: wati.ai_platform.protocol.user_manager_service.UserManagerService.MovideoUserGetUsage:output_type -> wati.ai_platform.protocol.user_manager_service.MovideoUserGetUsageResponse
	40, // 64: wati.ai_platform.protocol.user_manager_service.UserManagerService.MovideoUserNewSubscription:output_type -> wati.ai_platform.protocol.user_manager_service.MovideoUserNewSubscriptionResponse
	42, // 65: wati.ai_platform.protocol.user_manager_service.UserManagerService.MovideoUserListSubscriptions:output_type -> wati.ai_platform.protocol.user_manager_service.MovideoUserListSubscriptionsResponse
	44, // 66: wati.ai_platform.protocol.user_manager_service.UserManagerService.MovideoUserGetSubscription:output_type -> wati.ai_platform.protocol.user_manager_service.MovideoUserGetSubscriptionResponse
	36, // 67: wati.ai_platform.protocol.user_manager_service.UserManagerService.MovideoUserBalanceCost:output_type -> wati.ai_platform.protocol.user_manager_service.MovideoUserBalanceCostResponse
	46, // 68: wati.ai_platform.protocol.user_manager_service.UserManagerService.MovideoSubscriptionEvent:output_type -> wati.ai_platform.protocol.user_manager_service.MovideoSubscriptionEventResponse
	14, // 69: wati.ai_platform.protocol.user_manager_service.UserManagerService.UserAuth:output_type -> wati.ai_platform.protocol.user_manager_service.UserAuthResponse
	47, // [47:70] is the sub-list for method output_type
	24, // [24:47] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_user_manager_service_api_proto_init() }
func file_user_manager_service_api_proto_init() {
	if File_user_manager_service_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_user_manager_service_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommiLoginAndRegisterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_manager_service_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommiLoginAndRegisterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_manager_service_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommiResetPasswordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_manager_service_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommiResetPasswordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_manager_service_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommiUserActiveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_manager_service_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommiUserActiveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_manager_service_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommiLogoutRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_manager_service_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommiLogoutResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_manager_service_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommiUserGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_manager_service_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommiUserGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_manager_service_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommiUserUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_manager_service_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommiUserUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_manager_service_api_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAuthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_manager_service_api_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAuthResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_manager_service_api_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommiUserAPIKeyActionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_manager_service_api_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommiUserAPIKeyActionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_manager_service_api_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommiUserAPIKeyListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_manager_service_api_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommiUserAPIKeyListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_manager_service_api_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommiUserCreditUsageListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_manager_service_api_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommiUserCreditUsageListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_manager_service_api_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommiBatchUsersAddCreditsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_manager_service_api_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommiBatchUsersAddCreditsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_manager_service_api_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommiUserTaskCreditCostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_manager_service_api_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommiUserTaskCreditCostResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_manager_service_api_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovideoUserVerifyTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_manager_service_api_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovideoUserVerifyTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_manager_service_api_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovideoUserLogoutRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_manager_service_api_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovideoUserLogoutResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_manager_service_api_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovideoUserGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_manager_service_api_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovideoUserGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_manager_service_api_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovideoUserUpgradeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_manager_service_api_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovideoUserUpgradeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_manager_service_api_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovideoUserGetUsageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_manager_service_api_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovideoUserGetUsageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_manager_service_api_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovideoUserBalanceCostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_manager_service_api_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovideoUserBalanceCostResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_manager_service_api_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovideoUserDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_manager_service_api_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovideoUserDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_manager_service_api_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovideoUserNewSubscriptionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_manager_service_api_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovideoUserNewSubscriptionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_manager_service_api_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovideoUserListSubscriptionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_manager_service_api_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovideoUserListSubscriptionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_manager_service_api_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovideoUserGetSubscriptionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_manager_service_api_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovideoUserGetSubscriptionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_manager_service_api_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovideoSubscriptionEventRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_manager_service_api_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovideoSubscriptionEventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_user_manager_service_api_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   46,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_user_manager_service_api_proto_goTypes,
		DependencyIndexes: file_user_manager_service_api_proto_depIdxs,
		EnumInfos:         file_user_manager_service_api_proto_enumTypes,
		MessageInfos:      file_user_manager_service_api_proto_msgTypes,
	}.Build()
	File_user_manager_service_api_proto = out.File
	file_user_manager_service_api_proto_rawDesc = nil
	file_user_manager_service_api_proto_goTypes = nil
	file_user_manager_service_api_proto_depIdxs = nil
}
