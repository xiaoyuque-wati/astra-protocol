// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v3.19.4
// source: common.proto

package common

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type USERFAVOURITE int32

const (
	USERFAVOURITE_FAVOURITE_UNKNOWN USERFAVOURITE = 0
	USERFAVOURITE_UNFAVOURITE       USERFAVOURITE = 1
	USERFAVOURITE_FAVOURITE         USERFAVOURITE = 2
)

// Enum value maps for USERFAVOURITE.
var (
	USERFAVOURITE_name = map[int32]string{
		0: "FAVOURITE_UNKNOWN",
		1: "UNFAVOURITE",
		2: "FAVOURITE",
	}
	USERFAVOURITE_value = map[string]int32{
		"FAVOURITE_UNKNOWN": 0,
		"UNFAVOURITE":       1,
		"FAVOURITE":         2,
	}
)

func (x USERFAVOURITE) Enum() *USERFAVOURITE {
	p := new(USERFAVOURITE)
	*p = x
	return p
}

func (x USERFAVOURITE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (USERFAVOURITE) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[0].Descriptor()
}

func (USERFAVOURITE) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[0]
}

func (x USERFAVOURITE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use USERFAVOURITE.Descriptor instead.
func (USERFAVOURITE) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{0}
}

type USERTYPE int32

const (
	USERTYPE_NOTYPE  USERTYPE = 0
	USERTYPE_FREE    USERTYPE = 1
	USERTYPE_CREATOR USERTYPE = 2
	USERTYPE_PRO     USERTYPE = 3
)

// Enum value maps for USERTYPE.
var (
	USERTYPE_name = map[int32]string{
		0: "NOTYPE",
		1: "FREE",
		2: "CREATOR",
		3: "PRO",
	}
	USERTYPE_value = map[string]int32{
		"NOTYPE":  0,
		"FREE":    1,
		"CREATOR": 2,
		"PRO":     3,
	}
)

func (x USERTYPE) Enum() *USERTYPE {
	p := new(USERTYPE)
	*p = x
	return p
}

func (x USERTYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (USERTYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[1].Descriptor()
}

func (USERTYPE) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[1]
}

func (x USERTYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use USERTYPE.Descriptor instead.
func (USERTYPE) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{1}
}

type GENDER int32

const (
	GENDER_UNKNOWN GENDER = 0
	GENDER_MALE    GENDER = 1
	GENDER_FEMALE  GENDER = 2
)

// Enum value maps for GENDER.
var (
	GENDER_name = map[int32]string{
		0: "UNKNOWN",
		1: "MALE",
		2: "FEMALE",
	}
	GENDER_value = map[string]int32{
		"UNKNOWN": 0,
		"MALE":    1,
		"FEMALE":  2,
	}
)

func (x GENDER) Enum() *GENDER {
	p := new(GENDER)
	*p = x
	return p
}

func (x GENDER) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GENDER) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[2].Descriptor()
}

func (GENDER) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[2]
}

func (x GENDER) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GENDER.Descriptor instead.
func (GENDER) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{2}
}

type TONE int32

const (
	TONE_ALL_TONE  TONE = 0
	TONE_CONFIDENT TONE = 1
	TONE_FRIENDLY  TONE = 2
)

// Enum value maps for TONE.
var (
	TONE_name = map[int32]string{
		0: "ALL_TONE",
		1: "CONFIDENT",
		2: "FRIENDLY",
	}
	TONE_value = map[string]int32{
		"ALL_TONE":  0,
		"CONFIDENT": 1,
		"FRIENDLY":  2,
	}
)

func (x TONE) Enum() *TONE {
	p := new(TONE)
	*p = x
	return p
}

func (x TONE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TONE) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[3].Descriptor()
}

func (TONE) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[3]
}

func (x TONE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TONE.Descriptor instead.
func (TONE) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{3}
}

type AUTHTYPE int32

const (
	AUTHTYPE_INVALID AUTHTYPE = 0
	AUTHTYPE_TOKEN   AUTHTYPE = 1
	AUTHTYPE_API_KEY AUTHTYPE = 2
)

// Enum value maps for AUTHTYPE.
var (
	AUTHTYPE_name = map[int32]string{
		0: "INVALID",
		1: "TOKEN",
		2: "API_KEY",
	}
	AUTHTYPE_value = map[string]int32{
		"INVALID": 0,
		"TOKEN":   1,
		"API_KEY": 2,
	}
)

func (x AUTHTYPE) Enum() *AUTHTYPE {
	p := new(AUTHTYPE)
	*p = x
	return p
}

func (x AUTHTYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AUTHTYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[4].Descriptor()
}

func (AUTHTYPE) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[4]
}

func (x AUTHTYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AUTHTYPE.Descriptor instead.
func (AUTHTYPE) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{4}
}

type USERSOURCE int32

const (
	USERSOURCE_UNSUPPORT USERSOURCE = 0
	USERSOURCE_REGISTER  USERSOURCE = 1
	USERSOURCE_WATI      USERSOURCE = 2
	USERSOURCE_GOOGLE    USERSOURCE = 3
	USERSOURCE_APPLE     USERSOURCE = 4
)

// Enum value maps for USERSOURCE.
var (
	USERSOURCE_name = map[int32]string{
		0: "UNSUPPORT",
		1: "REGISTER",
		2: "WATI",
		3: "GOOGLE",
		4: "APPLE",
	}
	USERSOURCE_value = map[string]int32{
		"UNSUPPORT": 0,
		"REGISTER":  1,
		"WATI":      2,
		"GOOGLE":    3,
		"APPLE":     4,
	}
)

func (x USERSOURCE) Enum() *USERSOURCE {
	p := new(USERSOURCE)
	*p = x
	return p
}

func (x USERSOURCE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (USERSOURCE) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[5].Descriptor()
}

func (USERSOURCE) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[5]
}

func (x USERSOURCE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use USERSOURCE.Descriptor instead.
func (USERSOURCE) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{5}
}

type APIKEYACTION int32

const (
	APIKEYACTION_UNDEFINED APIKEYACTION = 0
	APIKEYACTION_CREATE    APIKEYACTION = 1
	APIKEYACTION_DELETE    APIKEYACTION = 2
	APIKEYACTION_GET       APIKEYACTION = 3
)

// Enum value maps for APIKEYACTION.
var (
	APIKEYACTION_name = map[int32]string{
		0: "UNDEFINED",
		1: "CREATE",
		2: "DELETE",
		3: "GET",
	}
	APIKEYACTION_value = map[string]int32{
		"UNDEFINED": 0,
		"CREATE":    1,
		"DELETE":    2,
		"GET":       3,
	}
)

func (x APIKEYACTION) Enum() *APIKEYACTION {
	p := new(APIKEYACTION)
	*p = x
	return p
}

func (x APIKEYACTION) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (APIKEYACTION) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[6].Descriptor()
}

func (APIKEYACTION) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[6]
}

func (x APIKEYACTION) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use APIKEYACTION.Descriptor instead.
func (APIKEYACTION) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{6}
}

type USERCREDITEVENT int32

const (
	USERCREDITEVENT_NO_ACTION USERCREDITEVENT = 0
	USERCREDITEVENT_ADD       USERCREDITEVENT = 1
	USERCREDITEVENT_MINUS     USERCREDITEVENT = 2
)

// Enum value maps for USERCREDITEVENT.
var (
	USERCREDITEVENT_name = map[int32]string{
		0: "NO_ACTION",
		1: "ADD",
		2: "MINUS",
	}
	USERCREDITEVENT_value = map[string]int32{
		"NO_ACTION": 0,
		"ADD":       1,
		"MINUS":     2,
	}
)

func (x USERCREDITEVENT) Enum() *USERCREDITEVENT {
	p := new(USERCREDITEVENT)
	*p = x
	return p
}

func (x USERCREDITEVENT) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (USERCREDITEVENT) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[7].Descriptor()
}

func (USERCREDITEVENT) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[7]
}

func (x USERCREDITEVENT) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use USERCREDITEVENT.Descriptor instead.
func (USERCREDITEVENT) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{7}
}

type SUBSCRIPTION_STATUS int32

const (
	SUBSCRIPTION_STATUS_NO_SUBSCRIPTION      SUBSCRIPTION_STATUS = 0
	SUBSCRIPTION_STATUS_SUBSCRIBED           SUBSCRIPTION_STATUS = 10
	SUBSCRIPTION_STATUS_SUBSCRIPTION_FAILED  SUBSCRIPTION_STATUS = 20
	SUBSCRIPTION_STATUS_SUBSCRIPTION_EXPIRED SUBSCRIPTION_STATUS = 30
)

// Enum value maps for SUBSCRIPTION_STATUS.
var (
	SUBSCRIPTION_STATUS_name = map[int32]string{
		0:  "NO_SUBSCRIPTION",
		10: "SUBSCRIBED",
		20: "SUBSCRIPTION_FAILED",
		30: "SUBSCRIPTION_EXPIRED",
	}
	SUBSCRIPTION_STATUS_value = map[string]int32{
		"NO_SUBSCRIPTION":      0,
		"SUBSCRIBED":           10,
		"SUBSCRIPTION_FAILED":  20,
		"SUBSCRIPTION_EXPIRED": 30,
	}
)

func (x SUBSCRIPTION_STATUS) Enum() *SUBSCRIPTION_STATUS {
	p := new(SUBSCRIPTION_STATUS)
	*p = x
	return p
}

func (x SUBSCRIPTION_STATUS) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SUBSCRIPTION_STATUS) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[8].Descriptor()
}

func (SUBSCRIPTION_STATUS) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[8]
}

func (x SUBSCRIPTION_STATUS) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SUBSCRIPTION_STATUS.Descriptor instead.
func (SUBSCRIPTION_STATUS) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{8}
}

type SUBSCRIPTION_EVENT int32

const (
	SUBSCRIPTION_EVENT_NO_EVENT         SUBSCRIPTION_EVENT = 0
	SUBSCRIPTION_EVENT_PURCHASE_PRODUCT SUBSCRIPTION_EVENT = 1
	SUBSCRIPTION_EVENT_CHANGE_PRODUCT   SUBSCRIPTION_EVENT = 2
)

// Enum value maps for SUBSCRIPTION_EVENT.
var (
	SUBSCRIPTION_EVENT_name = map[int32]string{
		0: "NO_EVENT",
		1: "PURCHASE_PRODUCT",
		2: "CHANGE_PRODUCT",
	}
	SUBSCRIPTION_EVENT_value = map[string]int32{
		"NO_EVENT":         0,
		"PURCHASE_PRODUCT": 1,
		"CHANGE_PRODUCT":   2,
	}
)

func (x SUBSCRIPTION_EVENT) Enum() *SUBSCRIPTION_EVENT {
	p := new(SUBSCRIPTION_EVENT)
	*p = x
	return p
}

func (x SUBSCRIPTION_EVENT) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SUBSCRIPTION_EVENT) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[9].Descriptor()
}

func (SUBSCRIPTION_EVENT) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[9]
}

func (x SUBSCRIPTION_EVENT) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SUBSCRIPTION_EVENT.Descriptor instead.
func (SUBSCRIPTION_EVENT) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{9}
}

type STATUSCODE int32

const (
	STATUSCODE_SC_OK                  STATUSCODE = 0
	STATUSCODE_SC_CANCELLED           STATUSCODE = 1
	STATUSCODE_SC_UNKNOWN             STATUSCODE = 2
	STATUSCODE_SC_INVALID_ARGUMENT    STATUSCODE = 3
	STATUSCODE_SC_DEADLINE_EXCEEDED   STATUSCODE = 4
	STATUSCODE_SC_NOT_FOUND           STATUSCODE = 5
	STATUSCODE_SC_ALREADY_EXISTS      STATUSCODE = 6
	STATUSCODE_SC_PERMISSION_DENIED   STATUSCODE = 7
	STATUSCODE_SC_UNAUTHENTICATED     STATUSCODE = 16
	STATUSCODE_SC_RESOURCE_EXHAUSTED  STATUSCODE = 8
	STATUSCODE_SC_FAILED_PRECONDITION STATUSCODE = 9
	STATUSCODE_SC_ABORTED             STATUSCODE = 10
	STATUSCODE_SC_OUT_OF_RANGE        STATUSCODE = 11
	STATUSCODE_SC_UNIMPLEMENTED       STATUSCODE = 12
	STATUSCODE_SC_INTERNAL            STATUSCODE = 13
	STATUSCODE_SC_UNAVAILABLE         STATUSCODE = 14
	STATUSCODE_SC_DATA_LOSS           STATUSCODE = 15
)

// Enum value maps for STATUSCODE.
var (
	STATUSCODE_name = map[int32]string{
		0:  "SC_OK",
		1:  "SC_CANCELLED",
		2:  "SC_UNKNOWN",
		3:  "SC_INVALID_ARGUMENT",
		4:  "SC_DEADLINE_EXCEEDED",
		5:  "SC_NOT_FOUND",
		6:  "SC_ALREADY_EXISTS",
		7:  "SC_PERMISSION_DENIED",
		16: "SC_UNAUTHENTICATED",
		8:  "SC_RESOURCE_EXHAUSTED",
		9:  "SC_FAILED_PRECONDITION",
		10: "SC_ABORTED",
		11: "SC_OUT_OF_RANGE",
		12: "SC_UNIMPLEMENTED",
		13: "SC_INTERNAL",
		14: "SC_UNAVAILABLE",
		15: "SC_DATA_LOSS",
	}
	STATUSCODE_value = map[string]int32{
		"SC_OK":                  0,
		"SC_CANCELLED":           1,
		"SC_UNKNOWN":             2,
		"SC_INVALID_ARGUMENT":    3,
		"SC_DEADLINE_EXCEEDED":   4,
		"SC_NOT_FOUND":           5,
		"SC_ALREADY_EXISTS":      6,
		"SC_PERMISSION_DENIED":   7,
		"SC_UNAUTHENTICATED":     16,
		"SC_RESOURCE_EXHAUSTED":  8,
		"SC_FAILED_PRECONDITION": 9,
		"SC_ABORTED":             10,
		"SC_OUT_OF_RANGE":        11,
		"SC_UNIMPLEMENTED":       12,
		"SC_INTERNAL":            13,
		"SC_UNAVAILABLE":         14,
		"SC_DATA_LOSS":           15,
	}
)

func (x STATUSCODE) Enum() *STATUSCODE {
	p := new(STATUSCODE)
	*p = x
	return p
}

func (x STATUSCODE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (STATUSCODE) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[10].Descriptor()
}

func (STATUSCODE) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[10]
}

func (x STATUSCODE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use STATUSCODE.Descriptor instead.
func (STATUSCODE) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{10}
}

type QUALITY int32

const (
	QUALITY_UNSPECIFIED QUALITY = 0
	QUALITY_PIXEL_480P  QUALITY = 1
	QUALITY_PIXEL_720P  QUALITY = 2
	QUALITY_PIXEL_1080P QUALITY = 3
)

// Enum value maps for QUALITY.
var (
	QUALITY_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "PIXEL_480P",
		2: "PIXEL_720P",
		3: "PIXEL_1080P",
	}
	QUALITY_value = map[string]int32{
		"UNSPECIFIED": 0,
		"PIXEL_480P":  1,
		"PIXEL_720P":  2,
		"PIXEL_1080P": 3,
	}
)

func (x QUALITY) Enum() *QUALITY {
	p := new(QUALITY)
	*p = x
	return p
}

func (x QUALITY) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QUALITY) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[11].Descriptor()
}

func (QUALITY) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[11]
}

func (x QUALITY) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QUALITY.Descriptor instead.
func (QUALITY) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{11}
}

type TASKSTATUS int32

const (
	TASKSTATUS_TASK_UNKNOWN TASKSTATUS = 0
	TASKSTATUS_PENDING      TASKSTATUS = 1
	TASKSTATUS_PROCESSING   TASKSTATUS = 2
	TASKSTATUS_SUCCESS      TASKSTATUS = 3
	TASKSTATUS_FAILURE      TASKSTATUS = 4
)

// Enum value maps for TASKSTATUS.
var (
	TASKSTATUS_name = map[int32]string{
		0: "TASK_UNKNOWN",
		1: "PENDING",
		2: "PROCESSING",
		3: "SUCCESS",
		4: "FAILURE",
	}
	TASKSTATUS_value = map[string]int32{
		"TASK_UNKNOWN": 0,
		"PENDING":      1,
		"PROCESSING":   2,
		"SUCCESS":      3,
		"FAILURE":      4,
	}
)

func (x TASKSTATUS) Enum() *TASKSTATUS {
	p := new(TASKSTATUS)
	*p = x
	return p
}

func (x TASKSTATUS) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TASKSTATUS) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[12].Descriptor()
}

func (TASKSTATUS) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[12]
}

func (x TASKSTATUS) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TASKSTATUS.Descriptor instead.
func (TASKSTATUS) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{12}
}

type WATERMARK int32

const (
	WATERMARK_UNKNOWN_WM WATERMARK = 0
	WATERMARK_NO_WM      WATERMARK = 1
	WATERMARK_WM_CUSTOM  WATERMARK = 2
	WATERMARK_WM_MOVIDEO WATERMARK = 3
)

// Enum value maps for WATERMARK.
var (
	WATERMARK_name = map[int32]string{
		0: "UNKNOWN_WM",
		1: "NO_WM",
		2: "WM_CUSTOM",
		3: "WM_MOVIDEO",
	}
	WATERMARK_value = map[string]int32{
		"UNKNOWN_WM": 0,
		"NO_WM":      1,
		"WM_CUSTOM":  2,
		"WM_MOVIDEO": 3,
	}
)

func (x WATERMARK) Enum() *WATERMARK {
	p := new(WATERMARK)
	*p = x
	return p
}

func (x WATERMARK) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WATERMARK) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[13].Descriptor()
}

func (WATERMARK) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[13]
}

func (x WATERMARK) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WATERMARK.Descriptor instead.
func (WATERMARK) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{13}
}

type TASKSOURCE int32

const (
	TASKSOURCE_SOURCE_UNKNOWN TASKSOURCE = 0
	TASKSOURCE_WEBUI          TASKSOURCE = 1
	TASKSOURCE_API            TASKSOURCE = 2
)

// Enum value maps for TASKSOURCE.
var (
	TASKSOURCE_name = map[int32]string{
		0: "SOURCE_UNKNOWN",
		1: "WEBUI",
		2: "API",
	}
	TASKSOURCE_value = map[string]int32{
		"SOURCE_UNKNOWN": 0,
		"WEBUI":          1,
		"API":            2,
	}
)

func (x TASKSOURCE) Enum() *TASKSOURCE {
	p := new(TASKSOURCE)
	*p = x
	return p
}

func (x TASKSOURCE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TASKSOURCE) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[14].Descriptor()
}

func (TASKSOURCE) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[14]
}

func (x TASKSOURCE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TASKSOURCE.Descriptor instead.
func (TASKSOURCE) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{14}
}

type METRICTABLE int32

const (
	METRICTABLE_METRIC_UNDEFINED         METRICTABLE = 0
	METRICTABLE_COMMI_USER_NEW           METRICTABLE = 1
	METRICTABLE_COMMI_USER_ACTIVE        METRICTABLE = 2
	METRICTABLE_COMMI_VIDEO_GENERATION   METRICTABLE = 3
	METRICTABLE_COMMI_API_KEY_ACTION     METRICTABLE = 4
	METRICTABLE_COMMI_API_USAGE          METRICTABLE = 5
	METRICTABLE_COMMI_VIDEO_SHARE        METRICTABLE = 6
	METRICTABLE_COMMI_CREDIT_EVENT       METRICTABLE = 7
	METRICTABLE_MOVIDEO_USER_NEW         METRICTABLE = 8
	METRICTABLE_MOVIDEO_VIDEO_GENERATION METRICTABLE = 9
	METRICTABLE_MOVIDEO_VIDEO_EXPORT     METRICTABLE = 10
	METRICTABLE_MOVIDEO_FEEDBACK         METRICTABLE = 11
	METRICTABLE_MOVIDEO_SUBSCRIPTION     METRICTABLE = 12
	METRICTABLE_MOVIDEO_CREDIT_EVENT     METRICTABLE = 13
	METRICTABLE_MOVIDEO_SUB_CANCELLATION METRICTABLE = 14
)

// Enum value maps for METRICTABLE.
var (
	METRICTABLE_name = map[int32]string{
		0:  "METRIC_UNDEFINED",
		1:  "COMMI_USER_NEW",
		2:  "COMMI_USER_ACTIVE",
		3:  "COMMI_VIDEO_GENERATION",
		4:  "COMMI_API_KEY_ACTION",
		5:  "COMMI_API_USAGE",
		6:  "COMMI_VIDEO_SHARE",
		7:  "COMMI_CREDIT_EVENT",
		8:  "MOVIDEO_USER_NEW",
		9:  "MOVIDEO_VIDEO_GENERATION",
		10: "MOVIDEO_VIDEO_EXPORT",
		11: "MOVIDEO_FEEDBACK",
		12: "MOVIDEO_SUBSCRIPTION",
		13: "MOVIDEO_CREDIT_EVENT",
		14: "MOVIDEO_SUB_CANCELLATION",
	}
	METRICTABLE_value = map[string]int32{
		"METRIC_UNDEFINED":         0,
		"COMMI_USER_NEW":           1,
		"COMMI_USER_ACTIVE":        2,
		"COMMI_VIDEO_GENERATION":   3,
		"COMMI_API_KEY_ACTION":     4,
		"COMMI_API_USAGE":          5,
		"COMMI_VIDEO_SHARE":        6,
		"COMMI_CREDIT_EVENT":       7,
		"MOVIDEO_USER_NEW":         8,
		"MOVIDEO_VIDEO_GENERATION": 9,
		"MOVIDEO_VIDEO_EXPORT":     10,
		"MOVIDEO_FEEDBACK":         11,
		"MOVIDEO_SUBSCRIPTION":     12,
		"MOVIDEO_CREDIT_EVENT":     13,
		"MOVIDEO_SUB_CANCELLATION": 14,
	}
)

func (x METRICTABLE) Enum() *METRICTABLE {
	p := new(METRICTABLE)
	*p = x
	return p
}

func (x METRICTABLE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (METRICTABLE) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[15].Descriptor()
}

func (METRICTABLE) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[15]
}

func (x METRICTABLE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use METRICTABLE.Descriptor instead.
func (METRICTABLE) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{15}
}

type PRODUCT int32

const (
	PRODUCT_PRODUCT_UNKNOWN PRODUCT = 0
	PRODUCT_COMMI           PRODUCT = 1
	PRODUCT_MOVIDEO         PRODUCT = 2
)

// Enum value maps for PRODUCT.
var (
	PRODUCT_name = map[int32]string{
		0: "PRODUCT_UNKNOWN",
		1: "COMMI",
		2: "MOVIDEO",
	}
	PRODUCT_value = map[string]int32{
		"PRODUCT_UNKNOWN": 0,
		"COMMI":           1,
		"MOVIDEO":         2,
	}
)

func (x PRODUCT) Enum() *PRODUCT {
	p := new(PRODUCT)
	*p = x
	return p
}

func (x PRODUCT) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PRODUCT) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[16].Descriptor()
}

func (PRODUCT) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[16]
}

func (x PRODUCT) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PRODUCT.Descriptor instead.
func (PRODUCT) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{16}
}

type NameQuery_MATCHMODE int32

const (
	// Fuzzy search.
	NameQuery_FUZZY NameQuery_MATCHMODE = 0
	// Exact search.
	NameQuery_EXACT NameQuery_MATCHMODE = 1
)

// Enum value maps for NameQuery_MATCHMODE.
var (
	NameQuery_MATCHMODE_name = map[int32]string{
		0: "FUZZY",
		1: "EXACT",
	}
	NameQuery_MATCHMODE_value = map[string]int32{
		"FUZZY": 0,
		"EXACT": 1,
	}
)

func (x NameQuery_MATCHMODE) Enum() *NameQuery_MATCHMODE {
	p := new(NameQuery_MATCHMODE)
	*p = x
	return p
}

func (x NameQuery_MATCHMODE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NameQuery_MATCHMODE) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[17].Descriptor()
}

func (NameQuery_MATCHMODE) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[17]
}

func (x NameQuery_MATCHMODE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NameQuery_MATCHMODE.Descriptor instead.
func (NameQuery_MATCHMODE) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{3, 0}
}

// Generic result return. Typically returns the error status of each subrequest in a Batch class request.
type Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Generic service and system error codes, see the system standard error table for HTTP errors and semantics.
	// If the error is business-specific, the code should return 0, see status and error for details.
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// Detailed description of the error.
	Error string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	// Business error code..
	Status STATUSCODE `protobuf:"varint,3,opt,name=status,proto3,enum=wati.ai_platform.protocol.common.STATUSCODE" json:"status,omitempty"`
}

func (x *Result) Reset() {
	*x = Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Result) ProtoMessage() {}

func (x *Result) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Result.ProtoReflect.Descriptor instead.
func (*Result) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{0}
}

func (x *Result) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Result) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *Result) GetStatus() STATUSCODE {
	if x != nil {
		return x.Status
	}
	return STATUSCODE_SC_OK
}

type ResponsePaging struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset int64 `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit  int64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Total  int64 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ResponsePaging) Reset() {
	*x = ResponsePaging{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponsePaging) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponsePaging) ProtoMessage() {}

func (x *ResponsePaging) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponsePaging.ProtoReflect.Descriptor instead.
func (*ResponsePaging) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{1}
}

func (x *ResponsePaging) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ResponsePaging) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ResponsePaging) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type RequestPaging struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset int64 `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit  int64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *RequestPaging) Reset() {
	*x = RequestPaging{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestPaging) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestPaging) ProtoMessage() {}

func (x *RequestPaging) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestPaging.ProtoReflect.Descriptor instead.
func (*RequestPaging) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{2}
}

func (x *RequestPaging) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *RequestPaging) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type NameQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Search value.
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	// Search mode, default is fuzzy.
	MatchMode NameQuery_MATCHMODE `protobuf:"varint,2,opt,name=match_mode,json=matchMode,proto3,enum=wati.ai_platform.protocol.common.NameQuery_MATCHMODE" json:"match_mode,omitempty"`
}

func (x *NameQuery) Reset() {
	*x = NameQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NameQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NameQuery) ProtoMessage() {}

func (x *NameQuery) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NameQuery.ProtoReflect.Descriptor instead.
func (*NameQuery) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{3}
}

func (x *NameQuery) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *NameQuery) GetMatchMode() NameQuery_MATCHMODE {
	if x != nil {
		return x.MatchMode
	}
	return NameQuery_FUZZY
}

type TimeRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// start time.
	Start *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	// end time. default is now.
	End *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *TimeRange) Reset() {
	*x = TimeRange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeRange) ProtoMessage() {}

func (x *TimeRange) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeRange.ProtoReflect.Descriptor instead.
func (*TimeRange) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{4}
}

func (x *TimeRange) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *TimeRange) GetEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

type WatiReceiver struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// whatsapp number.
	WhatsappNumber string `protobuf:"bytes,1,opt,name=whatsapp_number,json=whatsappNumber,proto3" json:"whatsapp_number,omitempty"`
	// video id for sharing. valid for 1 month.
	SharedItemId string `protobuf:"bytes,2,opt,name=shared_item_id,json=sharedItemId,proto3" json:"shared_item_id,omitempty"`
	// other WATI custom param. Will pass through to the WATI server.
	OtherCustomParams []*WatiReceiver_CustomParam `protobuf:"bytes,3,rep,name=other_custom_params,json=otherCustomParams,proto3" json:"other_custom_params,omitempty"`
}

func (x *WatiReceiver) Reset() {
	*x = WatiReceiver{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatiReceiver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatiReceiver) ProtoMessage() {}

func (x *WatiReceiver) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatiReceiver.ProtoReflect.Descriptor instead.
func (*WatiReceiver) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{5}
}

func (x *WatiReceiver) GetWhatsappNumber() string {
	if x != nil {
		return x.WhatsappNumber
	}
	return ""
}

func (x *WatiReceiver) GetSharedItemId() string {
	if x != nil {
		return x.SharedItemId
	}
	return ""
}

func (x *WatiReceiver) GetOtherCustomParams() []*WatiReceiver_CustomParam {
	if x != nil {
		return x.OtherCustomParams
	}
	return nil
}

type WatiReceiver_CustomParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// variable name.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// variable value.
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *WatiReceiver_CustomParam) Reset() {
	*x = WatiReceiver_CustomParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatiReceiver_CustomParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatiReceiver_CustomParam) ProtoMessage() {}

func (x *WatiReceiver_CustomParam) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatiReceiver_CustomParam.ProtoReflect.Descriptor instead.
func (*WatiReceiver_CustomParam) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{5, 0}
}

func (x *WatiReceiver_CustomParam) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WatiReceiver_CustomParam) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

var File_common_proto protoreflect.FileDescriptor

var file_common_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x20,
	0x77, 0x61, 0x74, 0x69, 0x2e, 0x61, 0x69, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x78, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x44, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x77, 0x61, 0x74, 0x69, 0x2e, 0x61, 0x69, 0x5f,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x43,
	0x4f, 0x44, 0x45, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x54, 0x0a, 0x0e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x22, 0x3d, 0x0a, 0x0d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x22, 0x9a, 0x01, 0x0a, 0x09, 0x4e, 0x61, 0x6d, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x54, 0x0a, 0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x6d, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35, 0x2e, 0x77, 0x61, 0x74, 0x69, 0x2e,
	0x61, 0x69, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4e, 0x61, 0x6d, 0x65,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x4d, 0x41, 0x54, 0x43, 0x48, 0x4d, 0x4f, 0x44, 0x45, 0x52,
	0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x21, 0x0a, 0x09, 0x4d, 0x41,
	0x54, 0x43, 0x48, 0x4d, 0x4f, 0x44, 0x45, 0x12, 0x09, 0x0a, 0x05, 0x46, 0x55, 0x5a, 0x5a, 0x59,
	0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x58, 0x41, 0x43, 0x54, 0x10, 0x01, 0x22, 0x6b, 0x0a,
	0x09, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x2c, 0x0a, 0x03,
	0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x22, 0x82, 0x02, 0x0a, 0x0c, 0x57,
	0x61, 0x74, 0x69, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x27, 0x0a, 0x0f, 0x77,
	0x68, 0x61, 0x74, 0x73, 0x61, 0x70, 0x70, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x77, 0x68, 0x61, 0x74, 0x73, 0x61, 0x70, 0x70, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x69,
	0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x6a, 0x0a, 0x13, 0x6f, 0x74,
	0x68, 0x65, 0x72, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x77, 0x61, 0x74, 0x69, 0x2e, 0x61,
	0x69, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x57, 0x61, 0x74, 0x69, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x52, 0x11, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x37, 0x0a, 0x0b, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2a,
	0x46, 0x0a, 0x0d, 0x55, 0x53, 0x45, 0x52, 0x46, 0x41, 0x56, 0x4f, 0x55, 0x52, 0x49, 0x54, 0x45,
	0x12, 0x15, 0x0a, 0x11, 0x46, 0x41, 0x56, 0x4f, 0x55, 0x52, 0x49, 0x54, 0x45, 0x5f, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x46, 0x41, 0x56,
	0x4f, 0x55, 0x52, 0x49, 0x54, 0x45, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x46, 0x41, 0x56, 0x4f,
	0x55, 0x52, 0x49, 0x54, 0x45, 0x10, 0x02, 0x2a, 0x36, 0x0a, 0x08, 0x55, 0x53, 0x45, 0x52, 0x54,
	0x59, 0x50, 0x45, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x4f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x00, 0x12,
	0x08, 0x0a, 0x04, 0x46, 0x52, 0x45, 0x45, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x52, 0x45,
	0x41, 0x54, 0x4f, 0x52, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x52, 0x4f, 0x10, 0x03, 0x2a,
	0x2b, 0x0a, 0x06, 0x47, 0x45, 0x4e, 0x44, 0x45, 0x52, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x4d, 0x41, 0x4c, 0x45, 0x10, 0x01,
	0x12, 0x0a, 0x0a, 0x06, 0x46, 0x45, 0x4d, 0x41, 0x4c, 0x45, 0x10, 0x02, 0x2a, 0x31, 0x0a, 0x04,
	0x54, 0x4f, 0x4e, 0x45, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x4c, 0x4c, 0x5f, 0x54, 0x4f, 0x4e, 0x45,
	0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x44, 0x45, 0x4e, 0x54, 0x10,
	0x01, 0x12, 0x0c, 0x0a, 0x08, 0x46, 0x52, 0x49, 0x45, 0x4e, 0x44, 0x4c, 0x59, 0x10, 0x02, 0x2a,
	0x2f, 0x0a, 0x08, 0x41, 0x55, 0x54, 0x48, 0x54, 0x59, 0x50, 0x45, 0x12, 0x0b, 0x0a, 0x07, 0x49,
	0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x54, 0x4f, 0x4b, 0x45,
	0x4e, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x50, 0x49, 0x5f, 0x4b, 0x45, 0x59, 0x10, 0x02,
	0x2a, 0x4a, 0x0a, 0x0a, 0x55, 0x53, 0x45, 0x52, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x12, 0x0d,
	0x0a, 0x09, 0x55, 0x4e, 0x53, 0x55, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x10, 0x00, 0x12, 0x0c, 0x0a,
	0x08, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x45, 0x52, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x57,
	0x41, 0x54, 0x49, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x47, 0x4f, 0x4f, 0x47, 0x4c, 0x45, 0x10,
	0x03, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x50, 0x50, 0x4c, 0x45, 0x10, 0x04, 0x2a, 0x3e, 0x0a, 0x0c,
	0x41, 0x50, 0x49, 0x4b, 0x45, 0x59, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x12, 0x0d, 0x0a, 0x09,
	0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x43,
	0x52, 0x45, 0x41, 0x54, 0x45, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x45, 0x4c, 0x45, 0x54,
	0x45, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x45, 0x54, 0x10, 0x03, 0x2a, 0x34, 0x0a, 0x0f,
	0x55, 0x53, 0x45, 0x52, 0x43, 0x52, 0x45, 0x44, 0x49, 0x54, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x12,
	0x0d, 0x0a, 0x09, 0x4e, 0x4f, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x00, 0x12, 0x07,
	0x0a, 0x03, 0x41, 0x44, 0x44, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x49, 0x4e, 0x55, 0x53,
	0x10, 0x02, 0x2a, 0x6d, 0x0a, 0x13, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x50, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x12, 0x13, 0x0a, 0x0f, 0x4e, 0x4f, 0x5f,
	0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x00, 0x12, 0x0e,
	0x0a, 0x0a, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x42, 0x45, 0x44, 0x10, 0x0a, 0x12, 0x17,
	0x0a, 0x13, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x46,
	0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x14, 0x12, 0x18, 0x0a, 0x14, 0x53, 0x55, 0x42, 0x53, 0x43,
	0x52, 0x49, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x10,
	0x1e, 0x2a, 0x4c, 0x0a, 0x12, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x50, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x12, 0x0c, 0x0a, 0x08, 0x4e, 0x4f, 0x5f, 0x45, 0x56,
	0x45, 0x4e, 0x54, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x50, 0x55, 0x52, 0x43, 0x48, 0x41, 0x53,
	0x45, 0x5f, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x43,
	0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x10, 0x02, 0x2a,
	0xf0, 0x02, 0x0a, 0x0a, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x43, 0x4f, 0x44, 0x45, 0x12, 0x09,
	0x0a, 0x05, 0x53, 0x43, 0x5f, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x43, 0x5f,
	0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x53,
	0x43, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x53,
	0x43, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x41, 0x52, 0x47, 0x55, 0x4d, 0x45,
	0x4e, 0x54, 0x10, 0x03, 0x12, 0x18, 0x0a, 0x14, 0x53, 0x43, 0x5f, 0x44, 0x45, 0x41, 0x44, 0x4c,
	0x49, 0x4e, 0x45, 0x5f, 0x45, 0x58, 0x43, 0x45, 0x45, 0x44, 0x45, 0x44, 0x10, 0x04, 0x12, 0x10,
	0x0a, 0x0c, 0x53, 0x43, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x05,
	0x12, 0x15, 0x0a, 0x11, 0x53, 0x43, 0x5f, 0x41, 0x4c, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x45,
	0x58, 0x49, 0x53, 0x54, 0x53, 0x10, 0x06, 0x12, 0x18, 0x0a, 0x14, 0x53, 0x43, 0x5f, 0x50, 0x45,
	0x52, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x45, 0x4e, 0x49, 0x45, 0x44, 0x10,
	0x07, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x43, 0x5f, 0x55, 0x4e, 0x41, 0x55, 0x54, 0x48, 0x45, 0x4e,
	0x54, 0x49, 0x43, 0x41, 0x54, 0x45, 0x44, 0x10, 0x10, 0x12, 0x19, 0x0a, 0x15, 0x53, 0x43, 0x5f,
	0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x45, 0x58, 0x48, 0x41, 0x55, 0x53, 0x54,
	0x45, 0x44, 0x10, 0x08, 0x12, 0x1a, 0x0a, 0x16, 0x53, 0x43, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45,
	0x44, 0x5f, 0x50, 0x52, 0x45, 0x43, 0x4f, 0x4e, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x09,
	0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x43, 0x5f, 0x41, 0x42, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x10, 0x0a,
	0x12, 0x13, 0x0a, 0x0f, 0x53, 0x43, 0x5f, 0x4f, 0x55, 0x54, 0x5f, 0x4f, 0x46, 0x5f, 0x52, 0x41,
	0x4e, 0x47, 0x45, 0x10, 0x0b, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x43, 0x5f, 0x55, 0x4e, 0x49, 0x4d,
	0x50, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x45, 0x44, 0x10, 0x0c, 0x12, 0x0f, 0x0a, 0x0b, 0x53,
	0x43, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x10, 0x0d, 0x12, 0x12, 0x0a, 0x0e,
	0x53, 0x43, 0x5f, 0x55, 0x4e, 0x41, 0x56, 0x41, 0x49, 0x4c, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x0e,
	0x12, 0x10, 0x0a, 0x0c, 0x53, 0x43, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x4c, 0x4f, 0x53, 0x53,
	0x10, 0x0f, 0x2a, 0x4b, 0x0a, 0x07, 0x51, 0x55, 0x41, 0x4c, 0x49, 0x54, 0x59, 0x12, 0x0f, 0x0a,
	0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0e,
	0x0a, 0x0a, 0x50, 0x49, 0x58, 0x45, 0x4c, 0x5f, 0x34, 0x38, 0x30, 0x50, 0x10, 0x01, 0x12, 0x0e,
	0x0a, 0x0a, 0x50, 0x49, 0x58, 0x45, 0x4c, 0x5f, 0x37, 0x32, 0x30, 0x50, 0x10, 0x02, 0x12, 0x0f,
	0x0a, 0x0b, 0x50, 0x49, 0x58, 0x45, 0x4c, 0x5f, 0x31, 0x30, 0x38, 0x30, 0x50, 0x10, 0x03, 0x2a,
	0x55, 0x0a, 0x0a, 0x54, 0x41, 0x53, 0x4b, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x12, 0x10, 0x0a,
	0x0c, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12,
	0x0b, 0x0a, 0x07, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a,
	0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07,
	0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x46, 0x41, 0x49,
	0x4c, 0x55, 0x52, 0x45, 0x10, 0x04, 0x2a, 0x45, 0x0a, 0x09, 0x57, 0x41, 0x54, 0x45, 0x52, 0x4d,
	0x41, 0x52, 0x4b, 0x12, 0x0e, 0x0a, 0x0a, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x57,
	0x4d, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x4e, 0x4f, 0x5f, 0x57, 0x4d, 0x10, 0x01, 0x12, 0x0d,
	0x0a, 0x09, 0x57, 0x4d, 0x5f, 0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x10, 0x02, 0x12, 0x0e, 0x0a,
	0x0a, 0x57, 0x4d, 0x5f, 0x4d, 0x4f, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x10, 0x03, 0x2a, 0x34, 0x0a,
	0x0a, 0x54, 0x41, 0x53, 0x4b, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x12, 0x12, 0x0a, 0x0e, 0x53,
	0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12,
	0x09, 0x0a, 0x05, 0x57, 0x45, 0x42, 0x55, 0x49, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x50,
	0x49, 0x10, 0x02, 0x2a, 0xfe, 0x02, 0x0a, 0x0b, 0x4d, 0x45, 0x54, 0x52, 0x49, 0x43, 0x54, 0x41,
	0x42, 0x4c, 0x45, 0x12, 0x14, 0x0a, 0x10, 0x4d, 0x45, 0x54, 0x52, 0x49, 0x43, 0x5f, 0x55, 0x4e,
	0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x4f, 0x4d,
	0x4d, 0x49, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4e, 0x45, 0x57, 0x10, 0x01, 0x12, 0x15, 0x0a,
	0x11, 0x43, 0x4f, 0x4d, 0x4d, 0x49, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x41, 0x43, 0x54, 0x49,
	0x56, 0x45, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x43, 0x4f, 0x4d, 0x4d, 0x49, 0x5f, 0x56, 0x49,
	0x44, 0x45, 0x4f, 0x5f, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x03,
	0x12, 0x18, 0x0a, 0x14, 0x43, 0x4f, 0x4d, 0x4d, 0x49, 0x5f, 0x41, 0x50, 0x49, 0x5f, 0x4b, 0x45,
	0x59, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x4f,
	0x4d, 0x4d, 0x49, 0x5f, 0x41, 0x50, 0x49, 0x5f, 0x55, 0x53, 0x41, 0x47, 0x45, 0x10, 0x05, 0x12,
	0x15, 0x0a, 0x11, 0x43, 0x4f, 0x4d, 0x4d, 0x49, 0x5f, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x5f, 0x53,
	0x48, 0x41, 0x52, 0x45, 0x10, 0x06, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x4f, 0x4d, 0x4d, 0x49, 0x5f,
	0x43, 0x52, 0x45, 0x44, 0x49, 0x54, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x10, 0x07, 0x12, 0x14,
	0x0a, 0x10, 0x4d, 0x4f, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4e,
	0x45, 0x57, 0x10, 0x08, 0x12, 0x1c, 0x0a, 0x18, 0x4d, 0x4f, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x5f,
	0x56, 0x49, 0x44, 0x45, 0x4f, 0x5f, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x10, 0x09, 0x12, 0x18, 0x0a, 0x14, 0x4d, 0x4f, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x5f, 0x56, 0x49,
	0x44, 0x45, 0x4f, 0x5f, 0x45, 0x58, 0x50, 0x4f, 0x52, 0x54, 0x10, 0x0a, 0x12, 0x14, 0x0a, 0x10,
	0x4d, 0x4f, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x5f, 0x46, 0x45, 0x45, 0x44, 0x42, 0x41, 0x43, 0x4b,
	0x10, 0x0b, 0x12, 0x18, 0x0a, 0x14, 0x4d, 0x4f, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x5f, 0x53, 0x55,
	0x42, 0x53, 0x43, 0x52, 0x49, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x0c, 0x12, 0x18, 0x0a, 0x14,
	0x4d, 0x4f, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x5f, 0x43, 0x52, 0x45, 0x44, 0x49, 0x54, 0x5f, 0x45,
	0x56, 0x45, 0x4e, 0x54, 0x10, 0x0d, 0x12, 0x1c, 0x0a, 0x18, 0x4d, 0x4f, 0x56, 0x49, 0x44, 0x45,
	0x4f, 0x5f, 0x53, 0x55, 0x42, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x10, 0x0e, 0x2a, 0x36, 0x0a, 0x07, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x12,
	0x13, 0x0a, 0x0f, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x43, 0x4f, 0x4d, 0x4d, 0x49, 0x10, 0x01, 0x12,
	0x0b, 0x0a, 0x07, 0x4d, 0x4f, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x10, 0x02, 0x42, 0x34, 0x5a, 0x32,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x43, 0x6c, 0x61, 0x72, 0x65,
	0x41, 0x49, 0x2f, 0x61, 0x69, 0x2d, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2d, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_common_proto_rawDescOnce sync.Once
	file_common_proto_rawDescData = file_common_proto_rawDesc
)

func file_common_proto_rawDescGZIP() []byte {
	file_common_proto_rawDescOnce.Do(func() {
		file_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_common_proto_rawDescData)
	})
	return file_common_proto_rawDescData
}

var file_common_proto_enumTypes = make([]protoimpl.EnumInfo, 18)
var file_common_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_common_proto_goTypes = []interface{}{
	(USERFAVOURITE)(0),               // 0: wati.ai_platform.protocol.common.USERFAVOURITE
	(USERTYPE)(0),                    // 1: wati.ai_platform.protocol.common.USERTYPE
	(GENDER)(0),                      // 2: wati.ai_platform.protocol.common.GENDER
	(TONE)(0),                        // 3: wati.ai_platform.protocol.common.TONE
	(AUTHTYPE)(0),                    // 4: wati.ai_platform.protocol.common.AUTHTYPE
	(USERSOURCE)(0),                  // 5: wati.ai_platform.protocol.common.USERSOURCE
	(APIKEYACTION)(0),                // 6: wati.ai_platform.protocol.common.APIKEYACTION
	(USERCREDITEVENT)(0),             // 7: wati.ai_platform.protocol.common.USERCREDITEVENT
	(SUBSCRIPTION_STATUS)(0),         // 8: wati.ai_platform.protocol.common.SUBSCRIPTION_STATUS
	(SUBSCRIPTION_EVENT)(0),          // 9: wati.ai_platform.protocol.common.SUBSCRIPTION_EVENT
	(STATUSCODE)(0),                  // 10: wati.ai_platform.protocol.common.STATUSCODE
	(QUALITY)(0),                     // 11: wati.ai_platform.protocol.common.QUALITY
	(TASKSTATUS)(0),                  // 12: wati.ai_platform.protocol.common.TASKSTATUS
	(WATERMARK)(0),                   // 13: wati.ai_platform.protocol.common.WATERMARK
	(TASKSOURCE)(0),                  // 14: wati.ai_platform.protocol.common.TASKSOURCE
	(METRICTABLE)(0),                 // 15: wati.ai_platform.protocol.common.METRICTABLE
	(PRODUCT)(0),                     // 16: wati.ai_platform.protocol.common.PRODUCT
	(NameQuery_MATCHMODE)(0),         // 17: wati.ai_platform.protocol.common.NameQuery.MATCHMODE
	(*Result)(nil),                   // 18: wati.ai_platform.protocol.common.Result
	(*ResponsePaging)(nil),           // 19: wati.ai_platform.protocol.common.ResponsePaging
	(*RequestPaging)(nil),            // 20: wati.ai_platform.protocol.common.RequestPaging
	(*NameQuery)(nil),                // 21: wati.ai_platform.protocol.common.NameQuery
	(*TimeRange)(nil),                // 22: wati.ai_platform.protocol.common.TimeRange
	(*WatiReceiver)(nil),             // 23: wati.ai_platform.protocol.common.WatiReceiver
	(*WatiReceiver_CustomParam)(nil), // 24: wati.ai_platform.protocol.common.WatiReceiver.CustomParam
	(*timestamppb.Timestamp)(nil),    // 25: google.protobuf.Timestamp
}
var file_common_proto_depIdxs = []int32{
	10, // 0: wati.ai_platform.protocol.common.Result.status:type_name -> wati.ai_platform.protocol.common.STATUSCODE
	17, // 1: wati.ai_platform.protocol.common.NameQuery.match_mode:type_name -> wati.ai_platform.protocol.common.NameQuery.MATCHMODE
	25, // 2: wati.ai_platform.protocol.common.TimeRange.start:type_name -> google.protobuf.Timestamp
	25, // 3: wati.ai_platform.protocol.common.TimeRange.end:type_name -> google.protobuf.Timestamp
	24, // 4: wati.ai_platform.protocol.common.WatiReceiver.other_custom_params:type_name -> wati.ai_platform.protocol.common.WatiReceiver.CustomParam
	5,  // [5:5] is the sub-list for method output_type
	5,  // [5:5] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_common_proto_init() }
func file_common_proto_init() {
	if File_common_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_common_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponsePaging); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestPaging); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NameQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeRange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatiReceiver); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatiReceiver_CustomParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_common_proto_rawDesc,
			NumEnums:      18,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_proto_goTypes,
		DependencyIndexes: file_common_proto_depIdxs,
		EnumInfos:         file_common_proto_enumTypes,
		MessageInfos:      file_common_proto_msgTypes,
	}.Build()
	File_common_proto = out.File
	file_common_proto_rawDesc = nil
	file_common_proto_goTypes = nil
	file_common_proto_depIdxs = nil
}
