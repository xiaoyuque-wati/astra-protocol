# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from user_manager_service import api_pb2 as user__manager__service_dot_api__pb2

GRPC_GENERATED_VERSION = '1.70.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in user_manager_service/api_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class UserManagerServiceStub(object):
    """用户管理服务
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CommiLoginAndRegister = channel.unary_unary(
                '/wati.ai_platform.protocol.user_manager_service.UserManagerService/CommiLoginAndRegister',
                request_serializer=user__manager__service_dot_api__pb2.CommiLoginAndRegisterRequest.SerializeToString,
                response_deserializer=user__manager__service_dot_api__pb2.CommiLoginAndRegisterResponse.FromString,
                _registered_method=True)
        self.CommiResetPassword = channel.unary_unary(
                '/wati.ai_platform.protocol.user_manager_service.UserManagerService/CommiResetPassword',
                request_serializer=user__manager__service_dot_api__pb2.CommiResetPasswordRequest.SerializeToString,
                response_deserializer=user__manager__service_dot_api__pb2.CommiResetPasswordResponse.FromString,
                _registered_method=True)
        self.CommiUserActive = channel.unary_unary(
                '/wati.ai_platform.protocol.user_manager_service.UserManagerService/CommiUserActive',
                request_serializer=user__manager__service_dot_api__pb2.CommiUserActiveRequest.SerializeToString,
                response_deserializer=user__manager__service_dot_api__pb2.CommiUserActiveResponse.FromString,
                _registered_method=True)
        self.CommiLogout = channel.unary_unary(
                '/wati.ai_platform.protocol.user_manager_service.UserManagerService/CommiLogout',
                request_serializer=user__manager__service_dot_api__pb2.CommiLogoutRequest.SerializeToString,
                response_deserializer=user__manager__service_dot_api__pb2.CommiLogoutResponse.FromString,
                _registered_method=True)
        self.CommiUserGet = channel.unary_unary(
                '/wati.ai_platform.protocol.user_manager_service.UserManagerService/CommiUserGet',
                request_serializer=user__manager__service_dot_api__pb2.CommiUserGetRequest.SerializeToString,
                response_deserializer=user__manager__service_dot_api__pb2.CommiUserGetResponse.FromString,
                _registered_method=True)
        self.CommiUserUpdate = channel.unary_unary(
                '/wati.ai_platform.protocol.user_manager_service.UserManagerService/CommiUserUpdate',
                request_serializer=user__manager__service_dot_api__pb2.CommiUserUpdateRequest.SerializeToString,
                response_deserializer=user__manager__service_dot_api__pb2.CommiUserUpdateResponse.FromString,
                _registered_method=True)
        self.CommiUserAPIKeyAction = channel.unary_unary(
                '/wati.ai_platform.protocol.user_manager_service.UserManagerService/CommiUserAPIKeyAction',
                request_serializer=user__manager__service_dot_api__pb2.CommiUserAPIKeyActionRequest.SerializeToString,
                response_deserializer=user__manager__service_dot_api__pb2.CommiUserAPIKeyActionResponse.FromString,
                _registered_method=True)
        self.CommiUserAPIKeyList = channel.unary_unary(
                '/wati.ai_platform.protocol.user_manager_service.UserManagerService/CommiUserAPIKeyList',
                request_serializer=user__manager__service_dot_api__pb2.CommiUserAPIKeyListRequest.SerializeToString,
                response_deserializer=user__manager__service_dot_api__pb2.CommiUserAPIKeyListResponse.FromString,
                _registered_method=True)
        self.CommiUserCreditUsageList = channel.unary_unary(
                '/wati.ai_platform.protocol.user_manager_service.UserManagerService/CommiUserCreditUsageList',
                request_serializer=user__manager__service_dot_api__pb2.CommiUserCreditUsageListRequest.SerializeToString,
                response_deserializer=user__manager__service_dot_api__pb2.CommiUserCreditUsageListResponse.FromString,
                _registered_method=True)
        self.CommiBatchUsersAddCredits = channel.unary_unary(
                '/wati.ai_platform.protocol.user_manager_service.UserManagerService/CommiBatchUsersAddCredits',
                request_serializer=user__manager__service_dot_api__pb2.CommiBatchUsersAddCreditsRequest.SerializeToString,
                response_deserializer=user__manager__service_dot_api__pb2.CommiBatchUsersAddCreditsResponse.FromString,
                _registered_method=True)
        self.CommiUserTaskCreditCost = channel.unary_unary(
                '/wati.ai_platform.protocol.user_manager_service.UserManagerService/CommiUserTaskCreditCost',
                request_serializer=user__manager__service_dot_api__pb2.CommiUserTaskCreditCostRequest.SerializeToString,
                response_deserializer=user__manager__service_dot_api__pb2.CommiUserTaskCreditCostResponse.FromString,
                _registered_method=True)
        self.MovideoUserVerifyToken = channel.unary_unary(
                '/wati.ai_platform.protocol.user_manager_service.UserManagerService/MovideoUserVerifyToken',
                request_serializer=user__manager__service_dot_api__pb2.MovideoUserVerifyTokenRequest.SerializeToString,
                response_deserializer=user__manager__service_dot_api__pb2.MovideoUserVerifyTokenResponse.FromString,
                _registered_method=True)
        self.MovideoUserLogout = channel.unary_unary(
                '/wati.ai_platform.protocol.user_manager_service.UserManagerService/MovideoUserLogout',
                request_serializer=user__manager__service_dot_api__pb2.MovideoUserLogoutRequest.SerializeToString,
                response_deserializer=user__manager__service_dot_api__pb2.MovideoUserLogoutResponse.FromString,
                _registered_method=True)
        self.MovideoUserGet = channel.unary_unary(
                '/wati.ai_platform.protocol.user_manager_service.UserManagerService/MovideoUserGet',
                request_serializer=user__manager__service_dot_api__pb2.MovideoUserGetRequest.SerializeToString,
                response_deserializer=user__manager__service_dot_api__pb2.MovideoUserGetResponse.FromString,
                _registered_method=True)
        self.MovideoUserUpgrade = channel.unary_unary(
                '/wati.ai_platform.protocol.user_manager_service.UserManagerService/MovideoUserUpgrade',
                request_serializer=user__manager__service_dot_api__pb2.MovideoUserUpgradeRequest.SerializeToString,
                response_deserializer=user__manager__service_dot_api__pb2.MovideoUserUpgradeResponse.FromString,
                _registered_method=True)
        self.MovideoUserDelete = channel.unary_unary(
                '/wati.ai_platform.protocol.user_manager_service.UserManagerService/MovideoUserDelete',
                request_serializer=user__manager__service_dot_api__pb2.MovideoUserDeleteRequest.SerializeToString,
                response_deserializer=user__manager__service_dot_api__pb2.MovideoUserDeleteResponse.FromString,
                _registered_method=True)
        self.MovideoUserGetUsage = channel.unary_unary(
                '/wati.ai_platform.protocol.user_manager_service.UserManagerService/MovideoUserGetUsage',
                request_serializer=user__manager__service_dot_api__pb2.MovideoUserGetUsageRequest.SerializeToString,
                response_deserializer=user__manager__service_dot_api__pb2.MovideoUserGetUsageResponse.FromString,
                _registered_method=True)
        self.MovideoUserNewSubscription = channel.unary_unary(
                '/wati.ai_platform.protocol.user_manager_service.UserManagerService/MovideoUserNewSubscription',
                request_serializer=user__manager__service_dot_api__pb2.MovideoUserNewSubscriptionRequest.SerializeToString,
                response_deserializer=user__manager__service_dot_api__pb2.MovideoUserNewSubscriptionResponse.FromString,
                _registered_method=True)
        self.MovideoUserListSubscriptions = channel.unary_unary(
                '/wati.ai_platform.protocol.user_manager_service.UserManagerService/MovideoUserListSubscriptions',
                request_serializer=user__manager__service_dot_api__pb2.MovideoUserListSubscriptionsRequest.SerializeToString,
                response_deserializer=user__manager__service_dot_api__pb2.MovideoUserListSubscriptionsResponse.FromString,
                _registered_method=True)
        self.MovideoUserGetSubscription = channel.unary_unary(
                '/wati.ai_platform.protocol.user_manager_service.UserManagerService/MovideoUserGetSubscription',
                request_serializer=user__manager__service_dot_api__pb2.MovideoUserGetSubscriptionRequest.SerializeToString,
                response_deserializer=user__manager__service_dot_api__pb2.MovideoUserGetSubscriptionResponse.FromString,
                _registered_method=True)
        self.MovideoUserBalanceCost = channel.unary_unary(
                '/wati.ai_platform.protocol.user_manager_service.UserManagerService/MovideoUserBalanceCost',
                request_serializer=user__manager__service_dot_api__pb2.MovideoUserBalanceCostRequest.SerializeToString,
                response_deserializer=user__manager__service_dot_api__pb2.MovideoUserBalanceCostResponse.FromString,
                _registered_method=True)
        self.MovideoSubscriptionEvent = channel.unary_unary(
                '/wati.ai_platform.protocol.user_manager_service.UserManagerService/MovideoSubscriptionEvent',
                request_serializer=user__manager__service_dot_api__pb2.MovideoSubscriptionEventRequest.SerializeToString,
                response_deserializer=user__manager__service_dot_api__pb2.MovideoSubscriptionEventResponse.FromString,
                _registered_method=True)
        self.UserAuth = channel.unary_unary(
                '/wati.ai_platform.protocol.user_manager_service.UserManagerService/UserAuth',
                request_serializer=user__manager__service_dot_api__pb2.UserAuthRequest.SerializeToString,
                response_deserializer=user__manager__service_dot_api__pb2.UserAuthResponse.FromString,
                _registered_method=True)


class UserManagerServiceServicer(object):
    """用户管理服务
    """

    def CommiLoginAndRegister(self, request, context):
        """Login and register
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CommiResetPassword(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CommiUserActive(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CommiLogout(self, request, context):
        """Logouts
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CommiUserGet(self, request, context):
        """header的cookies里面带
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CommiUserUpdate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CommiUserAPIKeyAction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CommiUserAPIKeyList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CommiUserCreditUsageList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CommiBatchUsersAddCredits(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CommiUserTaskCreditCost(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MovideoUserVerifyToken(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MovideoUserLogout(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MovideoUserGet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MovideoUserUpgrade(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MovideoUserDelete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MovideoUserGetUsage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MovideoUserNewSubscription(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MovideoUserListSubscriptions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MovideoUserGetSubscription(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MovideoUserBalanceCost(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MovideoSubscriptionEvent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UserAuth(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserManagerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CommiLoginAndRegister': grpc.unary_unary_rpc_method_handler(
                    servicer.CommiLoginAndRegister,
                    request_deserializer=user__manager__service_dot_api__pb2.CommiLoginAndRegisterRequest.FromString,
                    response_serializer=user__manager__service_dot_api__pb2.CommiLoginAndRegisterResponse.SerializeToString,
            ),
            'CommiResetPassword': grpc.unary_unary_rpc_method_handler(
                    servicer.CommiResetPassword,
                    request_deserializer=user__manager__service_dot_api__pb2.CommiResetPasswordRequest.FromString,
                    response_serializer=user__manager__service_dot_api__pb2.CommiResetPasswordResponse.SerializeToString,
            ),
            'CommiUserActive': grpc.unary_unary_rpc_method_handler(
                    servicer.CommiUserActive,
                    request_deserializer=user__manager__service_dot_api__pb2.CommiUserActiveRequest.FromString,
                    response_serializer=user__manager__service_dot_api__pb2.CommiUserActiveResponse.SerializeToString,
            ),
            'CommiLogout': grpc.unary_unary_rpc_method_handler(
                    servicer.CommiLogout,
                    request_deserializer=user__manager__service_dot_api__pb2.CommiLogoutRequest.FromString,
                    response_serializer=user__manager__service_dot_api__pb2.CommiLogoutResponse.SerializeToString,
            ),
            'CommiUserGet': grpc.unary_unary_rpc_method_handler(
                    servicer.CommiUserGet,
                    request_deserializer=user__manager__service_dot_api__pb2.CommiUserGetRequest.FromString,
                    response_serializer=user__manager__service_dot_api__pb2.CommiUserGetResponse.SerializeToString,
            ),
            'CommiUserUpdate': grpc.unary_unary_rpc_method_handler(
                    servicer.CommiUserUpdate,
                    request_deserializer=user__manager__service_dot_api__pb2.CommiUserUpdateRequest.FromString,
                    response_serializer=user__manager__service_dot_api__pb2.CommiUserUpdateResponse.SerializeToString,
            ),
            'CommiUserAPIKeyAction': grpc.unary_unary_rpc_method_handler(
                    servicer.CommiUserAPIKeyAction,
                    request_deserializer=user__manager__service_dot_api__pb2.CommiUserAPIKeyActionRequest.FromString,
                    response_serializer=user__manager__service_dot_api__pb2.CommiUserAPIKeyActionResponse.SerializeToString,
            ),
            'CommiUserAPIKeyList': grpc.unary_unary_rpc_method_handler(
                    servicer.CommiUserAPIKeyList,
                    request_deserializer=user__manager__service_dot_api__pb2.CommiUserAPIKeyListRequest.FromString,
                    response_serializer=user__manager__service_dot_api__pb2.CommiUserAPIKeyListResponse.SerializeToString,
            ),
            'CommiUserCreditUsageList': grpc.unary_unary_rpc_method_handler(
                    servicer.CommiUserCreditUsageList,
                    request_deserializer=user__manager__service_dot_api__pb2.CommiUserCreditUsageListRequest.FromString,
                    response_serializer=user__manager__service_dot_api__pb2.CommiUserCreditUsageListResponse.SerializeToString,
            ),
            'CommiBatchUsersAddCredits': grpc.unary_unary_rpc_method_handler(
                    servicer.CommiBatchUsersAddCredits,
                    request_deserializer=user__manager__service_dot_api__pb2.CommiBatchUsersAddCreditsRequest.FromString,
                    response_serializer=user__manager__service_dot_api__pb2.CommiBatchUsersAddCreditsResponse.SerializeToString,
            ),
            'CommiUserTaskCreditCost': grpc.unary_unary_rpc_method_handler(
                    servicer.CommiUserTaskCreditCost,
                    request_deserializer=user__manager__service_dot_api__pb2.CommiUserTaskCreditCostRequest.FromString,
                    response_serializer=user__manager__service_dot_api__pb2.CommiUserTaskCreditCostResponse.SerializeToString,
            ),
            'MovideoUserVerifyToken': grpc.unary_unary_rpc_method_handler(
                    servicer.MovideoUserVerifyToken,
                    request_deserializer=user__manager__service_dot_api__pb2.MovideoUserVerifyTokenRequest.FromString,
                    response_serializer=user__manager__service_dot_api__pb2.MovideoUserVerifyTokenResponse.SerializeToString,
            ),
            'MovideoUserLogout': grpc.unary_unary_rpc_method_handler(
                    servicer.MovideoUserLogout,
                    request_deserializer=user__manager__service_dot_api__pb2.MovideoUserLogoutRequest.FromString,
                    response_serializer=user__manager__service_dot_api__pb2.MovideoUserLogoutResponse.SerializeToString,
            ),
            'MovideoUserGet': grpc.unary_unary_rpc_method_handler(
                    servicer.MovideoUserGet,
                    request_deserializer=user__manager__service_dot_api__pb2.MovideoUserGetRequest.FromString,
                    response_serializer=user__manager__service_dot_api__pb2.MovideoUserGetResponse.SerializeToString,
            ),
            'MovideoUserUpgrade': grpc.unary_unary_rpc_method_handler(
                    servicer.MovideoUserUpgrade,
                    request_deserializer=user__manager__service_dot_api__pb2.MovideoUserUpgradeRequest.FromString,
                    response_serializer=user__manager__service_dot_api__pb2.MovideoUserUpgradeResponse.SerializeToString,
            ),
            'MovideoUserDelete': grpc.unary_unary_rpc_method_handler(
                    servicer.MovideoUserDelete,
                    request_deserializer=user__manager__service_dot_api__pb2.MovideoUserDeleteRequest.FromString,
                    response_serializer=user__manager__service_dot_api__pb2.MovideoUserDeleteResponse.SerializeToString,
            ),
            'MovideoUserGetUsage': grpc.unary_unary_rpc_method_handler(
                    servicer.MovideoUserGetUsage,
                    request_deserializer=user__manager__service_dot_api__pb2.MovideoUserGetUsageRequest.FromString,
                    response_serializer=user__manager__service_dot_api__pb2.MovideoUserGetUsageResponse.SerializeToString,
            ),
            'MovideoUserNewSubscription': grpc.unary_unary_rpc_method_handler(
                    servicer.MovideoUserNewSubscription,
                    request_deserializer=user__manager__service_dot_api__pb2.MovideoUserNewSubscriptionRequest.FromString,
                    response_serializer=user__manager__service_dot_api__pb2.MovideoUserNewSubscriptionResponse.SerializeToString,
            ),
            'MovideoUserListSubscriptions': grpc.unary_unary_rpc_method_handler(
                    servicer.MovideoUserListSubscriptions,
                    request_deserializer=user__manager__service_dot_api__pb2.MovideoUserListSubscriptionsRequest.FromString,
                    response_serializer=user__manager__service_dot_api__pb2.MovideoUserListSubscriptionsResponse.SerializeToString,
            ),
            'MovideoUserGetSubscription': grpc.unary_unary_rpc_method_handler(
                    servicer.MovideoUserGetSubscription,
                    request_deserializer=user__manager__service_dot_api__pb2.MovideoUserGetSubscriptionRequest.FromString,
                    response_serializer=user__manager__service_dot_api__pb2.MovideoUserGetSubscriptionResponse.SerializeToString,
            ),
            'MovideoUserBalanceCost': grpc.unary_unary_rpc_method_handler(
                    servicer.MovideoUserBalanceCost,
                    request_deserializer=user__manager__service_dot_api__pb2.MovideoUserBalanceCostRequest.FromString,
                    response_serializer=user__manager__service_dot_api__pb2.MovideoUserBalanceCostResponse.SerializeToString,
            ),
            'MovideoSubscriptionEvent': grpc.unary_unary_rpc_method_handler(
                    servicer.MovideoSubscriptionEvent,
                    request_deserializer=user__manager__service_dot_api__pb2.MovideoSubscriptionEventRequest.FromString,
                    response_serializer=user__manager__service_dot_api__pb2.MovideoSubscriptionEventResponse.SerializeToString,
            ),
            'UserAuth': grpc.unary_unary_rpc_method_handler(
                    servicer.UserAuth,
                    request_deserializer=user__manager__service_dot_api__pb2.UserAuthRequest.FromString,
                    response_serializer=user__manager__service_dot_api__pb2.UserAuthResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'wati.ai_platform.protocol.user_manager_service.UserManagerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('wati.ai_platform.protocol.user_manager_service.UserManagerService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class UserManagerService(object):
    """用户管理服务
    """

    @staticmethod
    def CommiLoginAndRegister(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/wati.ai_platform.protocol.user_manager_service.UserManagerService/CommiLoginAndRegister',
            user__manager__service_dot_api__pb2.CommiLoginAndRegisterRequest.SerializeToString,
            user__manager__service_dot_api__pb2.CommiLoginAndRegisterResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CommiResetPassword(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/wati.ai_platform.protocol.user_manager_service.UserManagerService/CommiResetPassword',
            user__manager__service_dot_api__pb2.CommiResetPasswordRequest.SerializeToString,
            user__manager__service_dot_api__pb2.CommiResetPasswordResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CommiUserActive(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/wati.ai_platform.protocol.user_manager_service.UserManagerService/CommiUserActive',
            user__manager__service_dot_api__pb2.CommiUserActiveRequest.SerializeToString,
            user__manager__service_dot_api__pb2.CommiUserActiveResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CommiLogout(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/wati.ai_platform.protocol.user_manager_service.UserManagerService/CommiLogout',
            user__manager__service_dot_api__pb2.CommiLogoutRequest.SerializeToString,
            user__manager__service_dot_api__pb2.CommiLogoutResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CommiUserGet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/wati.ai_platform.protocol.user_manager_service.UserManagerService/CommiUserGet',
            user__manager__service_dot_api__pb2.CommiUserGetRequest.SerializeToString,
            user__manager__service_dot_api__pb2.CommiUserGetResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CommiUserUpdate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/wati.ai_platform.protocol.user_manager_service.UserManagerService/CommiUserUpdate',
            user__manager__service_dot_api__pb2.CommiUserUpdateRequest.SerializeToString,
            user__manager__service_dot_api__pb2.CommiUserUpdateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CommiUserAPIKeyAction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/wati.ai_platform.protocol.user_manager_service.UserManagerService/CommiUserAPIKeyAction',
            user__manager__service_dot_api__pb2.CommiUserAPIKeyActionRequest.SerializeToString,
            user__manager__service_dot_api__pb2.CommiUserAPIKeyActionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CommiUserAPIKeyList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/wati.ai_platform.protocol.user_manager_service.UserManagerService/CommiUserAPIKeyList',
            user__manager__service_dot_api__pb2.CommiUserAPIKeyListRequest.SerializeToString,
            user__manager__service_dot_api__pb2.CommiUserAPIKeyListResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CommiUserCreditUsageList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/wati.ai_platform.protocol.user_manager_service.UserManagerService/CommiUserCreditUsageList',
            user__manager__service_dot_api__pb2.CommiUserCreditUsageListRequest.SerializeToString,
            user__manager__service_dot_api__pb2.CommiUserCreditUsageListResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CommiBatchUsersAddCredits(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/wati.ai_platform.protocol.user_manager_service.UserManagerService/CommiBatchUsersAddCredits',
            user__manager__service_dot_api__pb2.CommiBatchUsersAddCreditsRequest.SerializeToString,
            user__manager__service_dot_api__pb2.CommiBatchUsersAddCreditsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CommiUserTaskCreditCost(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/wati.ai_platform.protocol.user_manager_service.UserManagerService/CommiUserTaskCreditCost',
            user__manager__service_dot_api__pb2.CommiUserTaskCreditCostRequest.SerializeToString,
            user__manager__service_dot_api__pb2.CommiUserTaskCreditCostResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def MovideoUserVerifyToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/wati.ai_platform.protocol.user_manager_service.UserManagerService/MovideoUserVerifyToken',
            user__manager__service_dot_api__pb2.MovideoUserVerifyTokenRequest.SerializeToString,
            user__manager__service_dot_api__pb2.MovideoUserVerifyTokenResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def MovideoUserLogout(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/wati.ai_platform.protocol.user_manager_service.UserManagerService/MovideoUserLogout',
            user__manager__service_dot_api__pb2.MovideoUserLogoutRequest.SerializeToString,
            user__manager__service_dot_api__pb2.MovideoUserLogoutResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def MovideoUserGet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/wati.ai_platform.protocol.user_manager_service.UserManagerService/MovideoUserGet',
            user__manager__service_dot_api__pb2.MovideoUserGetRequest.SerializeToString,
            user__manager__service_dot_api__pb2.MovideoUserGetResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def MovideoUserUpgrade(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/wati.ai_platform.protocol.user_manager_service.UserManagerService/MovideoUserUpgrade',
            user__manager__service_dot_api__pb2.MovideoUserUpgradeRequest.SerializeToString,
            user__manager__service_dot_api__pb2.MovideoUserUpgradeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def MovideoUserDelete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/wati.ai_platform.protocol.user_manager_service.UserManagerService/MovideoUserDelete',
            user__manager__service_dot_api__pb2.MovideoUserDeleteRequest.SerializeToString,
            user__manager__service_dot_api__pb2.MovideoUserDeleteResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def MovideoUserGetUsage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/wati.ai_platform.protocol.user_manager_service.UserManagerService/MovideoUserGetUsage',
            user__manager__service_dot_api__pb2.MovideoUserGetUsageRequest.SerializeToString,
            user__manager__service_dot_api__pb2.MovideoUserGetUsageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def MovideoUserNewSubscription(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/wati.ai_platform.protocol.user_manager_service.UserManagerService/MovideoUserNewSubscription',
            user__manager__service_dot_api__pb2.MovideoUserNewSubscriptionRequest.SerializeToString,
            user__manager__service_dot_api__pb2.MovideoUserNewSubscriptionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def MovideoUserListSubscriptions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/wati.ai_platform.protocol.user_manager_service.UserManagerService/MovideoUserListSubscriptions',
            user__manager__service_dot_api__pb2.MovideoUserListSubscriptionsRequest.SerializeToString,
            user__manager__service_dot_api__pb2.MovideoUserListSubscriptionsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def MovideoUserGetSubscription(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/wati.ai_platform.protocol.user_manager_service.UserManagerService/MovideoUserGetSubscription',
            user__manager__service_dot_api__pb2.MovideoUserGetSubscriptionRequest.SerializeToString,
            user__manager__service_dot_api__pb2.MovideoUserGetSubscriptionResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def MovideoUserBalanceCost(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/wati.ai_platform.protocol.user_manager_service.UserManagerService/MovideoUserBalanceCost',
            user__manager__service_dot_api__pb2.MovideoUserBalanceCostRequest.SerializeToString,
            user__manager__service_dot_api__pb2.MovideoUserBalanceCostResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def MovideoSubscriptionEvent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/wati.ai_platform.protocol.user_manager_service.UserManagerService/MovideoSubscriptionEvent',
            user__manager__service_dot_api__pb2.MovideoSubscriptionEventRequest.SerializeToString,
            user__manager__service_dot_api__pb2.MovideoSubscriptionEventResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UserAuth(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/wati.ai_platform.protocol.user_manager_service.UserManagerService/UserAuth',
            user__manager__service_dot_api__pb2.UserAuthRequest.SerializeToString,
            user__manager__service_dot_api__pb2.UserAuthResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
